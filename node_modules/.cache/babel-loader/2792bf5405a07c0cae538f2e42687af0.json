{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\PDFExportForm\\\\DailyBunkerRecord\\\\DailyBunkerRecord.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { withRouter } from \"react-router-dom\";\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js';\nimport { RenderForm } from '../../../Helpers/FormRenderer.js';\nimport { JSDateToHTMLDateString } from '../../../Helpers/Helper.js';\nimport APIService from \"../../../Helpers/APIService.js\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport SignatureCanvas from 'react-signature-canvas';\nimport '../style.css';\n\nclass DailyBunkerRecord extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.exporter = new PDFExporter();\n    this.sigCanvas = undefined;\n    this.recordIdHandling = undefined;\n    this.fieldHandling = undefined;\n\n    this.addRecord = () => {\n      let oldState = this.state;\n      var initDate = new Date();\n      oldState.records.push({\n        date: initDate,\n        consumed: 0,\n        ROB: ''\n      });\n      this.setState(oldState);\n    };\n\n    this.removeRecord = event => {\n      let id = event.target.dataset.id;\n      let oldState = this.state;\n      oldState.records.splice(id, 1);\n      this.setState(oldState);\n    };\n\n    this.addDailyBunker = () => {\n      if (this.sigCanvas === undefined || this.sigCanvas.isEmpty()) {\n        alert(\"Please sign off\");\n      }\n\n      var curState = this.state;\n      curState.signature = this.sigCanvas.getTrimmedCanvas().toDataURL('image/png');\n      this.exporter.CreateDailyBunkerPDF(curState, success => {\n        if (success) {\n          this.backToDailyBunkerDash();\n        }\n      });\n    };\n\n    this.backToDailyBunkerDash = () => {\n      this.props.history.push('/dailybunker/report');\n    };\n\n    this.getVessels = () => {\n      APIService.GetVessels(vessels => {\n        let oldState = this.state;\n\n        if (vessels instanceof Array) {\n          oldState.vesselNames = [];\n          vessels.forEach(elm => {\n            oldState.vesselNames.push({\n              label: elm.name,\n              value: elm.name\n            });\n          });\n        }\n\n        this.setState(oldState);\n      });\n    };\n\n    this.renderRecords = () => {\n      var recordElms = [];\n\n      for (var i = 0; i < this.state.records.length; i++) {\n        var record = this.state.records[i];\n        recordElms.push(React.createElement(Form.Row, {\n          key: i,\n          style: {\n            marginTop: '20px',\n            marginBottom: '20px',\n            fontSize: '.8rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"Date\")), React.createElement(Col, {\n          xs: 8,\n          sm: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"date\",\n          min: \"1990\",\n          \"data-id\": i,\n          \"data-datafield\": \"date\",\n          className: \"recordInput\",\n          onChange: this.handleRecordChange.bind(this),\n          value: JSDateToHTMLDateString(record.date),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Consumed\")), React.createElement(Col, {\n          xs: 8,\n          sm: 2,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"number\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"consumed\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.decoratorHandleDataChange.bind(this),\n          value: record.consumed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"ROB\")), React.createElement(Col, {\n          xs: 8,\n          sm: 4,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"ROB\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.decoratorHandleDataChange.bind(this),\n          value: record.ROB,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: {\n            span: 1,\n            offset: 11\n          },\n          sm: {\n            span: 1,\n            offset: 0\n          },\n          style: {\n            textAlign: 'center',\n            marginTop: 'auto',\n            marginBottom: 'auto'\n          },\n          className: \"exta-top-margin-on-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(Button, {\n          \"data-id\": i,\n          variant: \"danger\",\n          style: {\n            padding: '0 .4rem'\n          },\n          onClick: this.removeRecord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"x\"))));\n      }\n\n      return recordElms;\n    };\n\n    var _initDate = new Date();\n\n    this.state = {\n      vessel: \"ASIAN HERCULES II\",\n      reportDate: _initDate,\n      lastBunkerDate: _initDate,\n      lastBunkerQuantity: 0,\n      chiefEngineerName: \"Ng Shi Kai\",\n      bunkerROB: \"AND1238SD1\",\n      isMGO: true,\n      isLO: false,\n      isFW: false,\n      records: [],\n      vesselNames: [],\n      signature: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getVessels();\n  } // MARK : Enable Speech to Text Entry of Input\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let id = this.recordIdHandling;\n    let field = this.fieldHandling;\n\n    if (nextProps.transcript === \"\" || nextProps.transcript === this.props.transcript) {\n      return;\n    }\n\n    if (id === undefined) {\n      this.handleDataChange(undefined, field, nextProps.transcript);\n    } else {\n      this.handleRecordChange(undefined, field, id, nextProps.transcript);\n    }\n  }\n\n  handleRecordFocus(event) {\n    this.fieldHandling = event.target.dataset.datafield;\n    this.recordIdHandling = event.target.dataset.id;\n    this.props.startListening();\n  }\n\n  handleRecordBlur(event) {\n    this.props.stopListening();\n  }\n\n  decoratorHandleDataChange(event) {\n    let field = event.target.dataset.datafield;\n    let id = event.target.dataset.id;\n    let val = event.target.value;\n\n    if (id === undefined) {\n      this.handleDataChange(undefined, field, val);\n    } else {\n      this.handleRecordChange(undefined, field, id, val);\n    }\n  }\n\n  handleDataChange(event, dataFieldAffected = null, val = null) {\n    if (event !== undefined) {\n      dataFieldAffected = event.target.dataset.datafield;\n      val = event.target.value;\n    }\n\n    let oldState = this.state;\n\n    switch (dataFieldAffected) {\n      case \"vessel\":\n        oldState.vessel = val;\n        break;\n\n      case \"reportDate\":\n        oldState.reportDate = val;\n        break;\n\n      case \"lastBunkerDate\":\n        oldState.lastBunkerDate = val;\n        break;\n\n      case \"lastBunkerQuantity\":\n        oldState.lastBunkerQuantity = val;\n        break;\n\n      case \"chiefEngineerName\":\n        oldState.chiefEngineerName = val;\n        break;\n\n      case \"bunkerROB\":\n        oldState.bunkerROB = val;\n        break;\n\n      case \"bunkerType\":\n        switch (val) {\n          case \"0\":\n            oldState.isMGO = true;\n            oldState.isLO = false;\n            oldState.isFW = false;\n            break;\n\n          case \"1\":\n            oldState.isMGO = false;\n            oldState.isLO = true;\n            oldState.isFW = false;\n            break;\n\n          case \"2\":\n            oldState.isMGO = false;\n            oldState.isLO = false;\n            oldState.isFW = true;\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  handleRecordChange(event, dataFieldAffected = null, id = null, val = null) {\n    if (event !== undefined) {\n      dataFieldAffected = event.target.dataset.datafield;\n      id = event.target.dataset.id;\n      val = event.target.value;\n    }\n\n    let oldState = this.state;\n\n    switch (dataFieldAffected) {\n      case \"date\":\n        oldState.records[id].date = new Date(val);\n        break;\n\n      case \"consumed\":\n        oldState.records[id].consumed = val;\n        break;\n\n      case \"ROB\":\n        oldState.records[id].ROB = val;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  render() {\n    var bunkerType = 0;\n\n    if (this.state.isMGO) {\n      bunkerType = 0;\n    } else if (this.state.isLO) {\n      bunkerType = 1;\n    } else if (this.state.isFW) {\n      bunkerType = 2;\n    }\n\n    var formDataTop = {\n      fields: [{\n        label: \"Vessel\",\n        value: this.state.vessel,\n        type: \"select\",\n        datafield: \"vessel\",\n        onChange: this.handleDataChange.bind(this),\n        options: this.state.vesselNames\n      }, {\n        label: \"Chief Engineer Name\",\n        value: this.state.chiefEngineerName,\n        type: \"text\",\n        datafield: \"chiefEngineerName\",\n        onChange: this.decoratorHandleDataChange.bind(this),\n        onFocus: this.handleRecordFocus.bind(this),\n        onBlur: this.handleRecordBlur.bind(this)\n      }, {\n        label: \"Report Date\",\n        value: this.state.reportDate,\n        type: \"date\",\n        datafield: \"reportDate\",\n        onChange: this.handleDataChange.bind(this)\n      }, {\n        label: \"Last Bunker Date\",\n        value: this.state.lastBunkerDate,\n        type: \"date\",\n        datafield: \"lastBunkerDate\",\n        onChange: this.handleDataChange.bind(this)\n      }, {\n        label: \"Last Bunker Quantity\",\n        value: this.state.lastBunkerQuantity,\n        type: \"number\",\n        datafield: \"lastBunkerQuantity\",\n        onChange: this.decoratorHandleDataChange.bind(this),\n        onFocus: this.handleRecordFocus.bind(this),\n        onBlur: this.handleRecordBlur.bind(this)\n      }, {\n        label: \"Bunker ROB\",\n        value: this.state.bunkerROB,\n        type: \"text\",\n        datafield: \"bunkerROB\",\n        onChange: this.decoratorHandleDataChange.bind(this),\n        onFocus: this.handleRecordFocus.bind(this),\n        onBlur: this.handleRecordBlur.bind(this)\n      }, {\n        label: \"Bunker Type\",\n        value: bunkerType,\n        type: \"select\",\n        datafield: \"bunkerType\",\n        onChange: this.handleDataChange.bind(this),\n        options: [{\n          label: \"MGO\",\n          value: 0\n        }, {\n          label: \"Lube Oil\",\n          value: 1\n        }, {\n          label: \"Fresh Water\",\n          value: 2\n        }]\n      }]\n    };\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"formHeader1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Daily Bunker, Lubricants & Fresh Water Status Records\"))), React.createElement(Row, {\n      className: \"formContents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, RenderForm(formDataTop))), React.createElement(Row, {\n      style: {\n        marginLeft: '-15px',\n        marginRight: '-15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formRecords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        marginTop: '40px',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Records \"))), React.createElement(Form.Row, {\n      style: {\n        textAlign: \"center\",\n        fontSize: '.8rem',\n        fontWeight: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 5,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Col, {\n      xs: 2,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Consumed\"), React.createElement(Col, {\n      xs: 4,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"ROB\"), React.createElement(Col, {\n      xs: {\n        span: 1,\n        offset: 11\n      },\n      sm: {\n        span: 1,\n        offset: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.addRecord,\n      style: {\n        padding: '0 .4rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"+\"))), this.renderRecords()))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(SignatureCanvas, {\n      canvasProps: {\n        width: 300,\n        height: 100,\n        className: 'sigCanvas'\n      },\n      ref: ref => {\n        this.sigCanvas = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), \",\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.backToDailyBunkerDash,\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addDailyBunker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      style: {\n        paddingBottom: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst options = {\n  autoStart: false,\n  continuous: false\n};\nexport default SpeechRecognition(options)(withRouter(DailyBunkerRecord));","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/PDFExportForm/DailyBunkerRecord/DailyBunkerRecord.js"],"names":["React","Container","Row","Col","Button","Form","withRouter","PDFExporter","RenderForm","JSDateToHTMLDateString","APIService","SpeechRecognition","SignatureCanvas","DailyBunkerRecord","Component","constructor","props","context","exporter","sigCanvas","undefined","recordIdHandling","fieldHandling","addRecord","oldState","state","initDate","Date","records","push","date","consumed","ROB","setState","removeRecord","event","id","target","dataset","splice","addDailyBunker","isEmpty","alert","curState","signature","getTrimmedCanvas","toDataURL","CreateDailyBunkerPDF","success","backToDailyBunkerDash","history","getVessels","GetVessels","vessels","Array","vesselNames","forEach","elm","label","name","value","renderRecords","recordElms","i","length","record","marginTop","marginBottom","fontSize","handleRecordChange","bind","handleRecordBlur","handleRecordFocus","decoratorHandleDataChange","span","offset","textAlign","padding","vessel","reportDate","lastBunkerDate","lastBunkerQuantity","chiefEngineerName","bunkerROB","isMGO","isLO","isFW","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","field","transcript","handleDataChange","datafield","startListening","stopListening","val","dataFieldAffected","render","bunkerType","formDataTop","fields","type","onChange","options","onFocus","onBlur","marginLeft","marginRight","fontWeight","width","height","className","ref","paddingBottom","autoStart","continuous"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js'\r\nimport {RenderForm} from '../../../Helpers/FormRenderer.js'\r\nimport {JSDateToHTMLDateString} from '../../../Helpers/Helper.js'\r\nimport APIService from \"../../../Helpers/APIService.js\"\r\n\r\nimport SpeechRecognition from \"react-speech-recognition\";\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nimport '../style.css'\r\nclass DailyBunkerRecord extends React.Component { \r\n    exporter = new PDFExporter()\r\n    sigCanvas = undefined\r\n    constructor(props, context) {\r\n        super(props, context)\r\n        var initDate = new Date()\r\n        this.state={ \r\n            vessel : \"ASIAN HERCULES II\",\r\n            reportDate : initDate,\r\n            lastBunkerDate: initDate,\r\n            lastBunkerQuantity : 0,\r\n            chiefEngineerName : \"Ng Shi Kai\",\r\n            bunkerROB : \"AND1238SD1\",\r\n            isMGO : true,\r\n            isLO : false,\r\n            isFW : false,\r\n            records : [\r\n            ],\r\n            vesselNames : [],\r\n            signature : undefined\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getVessels()\r\n    }\r\n    // MARK : Enable Speech to Text Entry of Input\r\n    recordIdHandling = undefined\r\n    fieldHandling = undefined\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        let id = this.recordIdHandling;\r\n        let field = this.fieldHandling;\r\n        if (nextProps.transcript === \"\" || nextProps.transcript === this.props.transcript) {\r\n            return\r\n        }\r\n        if (id === undefined) {\r\n            this.handleDataChange(undefined, field, nextProps.transcript)\r\n        } else {\r\n            this.handleRecordChange(undefined, field, id, nextProps.transcript)\r\n        }\r\n    }\r\n    handleRecordFocus(event) {\r\n        this.fieldHandling = event.target.dataset.datafield\r\n        this.recordIdHandling = event.target.dataset.id\r\n        this.props.startListening();\r\n    }\r\n    handleRecordBlur(event) {\r\n        this.props.stopListening();\r\n    }\r\n    decoratorHandleDataChange(event){\r\n        let field = event.target.dataset.datafield\r\n        let id = event.target.dataset.id\r\n        let val = event.target.value\r\n        if (id === undefined) {\r\n            this.handleDataChange(undefined, field, val)\r\n        } else {\r\n            this.handleRecordChange(undefined, field, id, val)\r\n        }\r\n    }\r\n\r\n    handleDataChange(event, dataFieldAffected = null, val = null) {\r\n        if (event !== undefined) {\r\n            dataFieldAffected = event.target.dataset.datafield\r\n            val = event.target.value\r\n        }\r\n        let oldState = this.state;\r\n        switch (dataFieldAffected) {    \r\n            case \"vessel\" :\r\n                oldState.vessel = val\r\n                break\r\n            case \"reportDate\" :\r\n                oldState.reportDate = val\r\n                break\r\n            case \"lastBunkerDate\" :\r\n                oldState.lastBunkerDate = val\r\n                break\r\n            case \"lastBunkerQuantity\" :\r\n                oldState.lastBunkerQuantity = val\r\n                break\r\n            case \"chiefEngineerName\" :\r\n                oldState.chiefEngineerName = val\r\n                break\r\n            case \"bunkerROB\" :\r\n                oldState.bunkerROB = val\r\n                break\r\n            case \"bunkerType\" :\r\n                switch (val) {\r\n                    case \"0\" :\r\n                        oldState.isMGO = true\r\n                        oldState.isLO = false\r\n                        oldState.isFW = false\r\n                        break\r\n                    case \"1\" :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = true\r\n                        oldState.isFW = false\r\n                        break\r\n                    case \"2\" :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = false\r\n                        oldState.isFW = true\r\n                        break\r\n                    default :\r\n                        break\r\n                }\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    handleRecordChange(event, dataFieldAffected = null, id = null, val =  null) {\r\n        if (event !== undefined) {\r\n            dataFieldAffected = event.target.dataset.datafield\r\n            id = event.target.dataset.id\r\n            val = event.target.value\r\n        }\r\n        let oldState = this.state;\r\n        switch (dataFieldAffected) {    \r\n            case \"date\" :\r\n                oldState.records[id].date = new Date(val)\r\n                break\r\n            case \"consumed\" : \r\n                oldState.records[id].consumed = val\r\n                break\r\n            case \"ROB\" : \r\n                oldState.records[id].ROB = val\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    addRecord = () => {\r\n        let oldState = this.state\r\n        var initDate = new Date()\r\n        oldState.records.push({\r\n                date : initDate,\r\n                consumed : 0,\r\n                ROB : ''\r\n            })\r\n        this.setState(oldState) \r\n    }\r\n    removeRecord = (event) => {\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state\r\n        oldState.records.splice(id,1)\r\n        this.setState(oldState) \r\n    }\r\n\r\n    addDailyBunker = () => {\r\n        if (this.sigCanvas === undefined || this.sigCanvas.isEmpty()) {\r\n            alert(\"Please sign off\")\r\n        }\r\n        var curState = this.state\r\n        curState.signature = this.sigCanvas.getTrimmedCanvas().toDataURL('image/png')\r\n        this.exporter.CreateDailyBunkerPDF(curState, (success) => {\r\n            if (success) {\r\n                this.backToDailyBunkerDash()\r\n            }\r\n        })\r\n    }\r\n    backToDailyBunkerDash = () => {\r\n        this.props.history.push('/dailybunker/report')\r\n    }\r\n\r\n    getVessels = () => {\r\n        APIService.GetVessels((vessels) => {\r\n            let oldState = this.state\r\n            if (vessels instanceof Array) {\r\n                oldState.vesselNames = []\r\n                vessels.forEach((elm) => {\r\n                    oldState.vesselNames.push({label : elm.name, value : elm.name})\r\n                });\r\n            }\r\n            this.setState(oldState) \r\n        })\r\n    }    \r\n\r\n    renderRecords = () => {\r\n        var recordElms = []\r\n        for (var i=0; i < this.state.records.length; i++) {\r\n            var record = this.state.records[i]\r\n            recordElms.push(\r\n                <Form.Row key={i} style={{marginTop : '20px', marginBottom : '20px', fontSize : '.8rem'}}>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Date</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={5}>\r\n                        <Form.Control type=\"date\" min=\"1990\"\r\n                        data-id ={i}\r\n                        data-datafield =\"date\"\r\n                        className=\"recordInput\"\r\n                        onChange={this.handleRecordChange.bind(this)} value={JSDateToHTMLDateString(record.date)}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Consumed</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={2} className=\"verticalCenter\">\r\n                        <Form.Control type=\"number\"\r\n                            className=\"recordInput\"\r\n                            data-id ={i}\r\n                            data-datafield =\"consumed\"\r\n                            onBlur={this.handleRecordBlur.bind(this)}\r\n                            onFocus={this.handleRecordFocus.bind(this)}\r\n                            onChange={this.decoratorHandleDataChange.bind(this)}\r\n                            value={record.consumed}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>ROB</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={4} className=\"verticalCenter\">\r\n                        <Form.Control type=\"text\"\r\n                            className=\"recordInput\"\r\n                            data-id ={i}    \r\n                            data-datafield =\"ROB\"\r\n                            onBlur={this.handleRecordBlur.bind(this)}\r\n                            onFocus={this.handleRecordFocus.bind(this)}\r\n                            onChange={this.decoratorHandleDataChange.bind(this)}\r\n                            value={record.ROB}>\r\n                        </Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset : 0}} \r\n                    style={{textAlign : 'center', marginTop : 'auto', marginBottom : 'auto'}}\r\n                    className=\"exta-top-margin-on-small\">\r\n                        <Button data-id ={i} variant='danger' \r\n                        style={{padding : '0 .4rem'}} \r\n                        onClick={this.removeRecord}>x</Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            )\r\n        }\r\n        return recordElms\r\n    }\r\n    render() { \r\n        var bunkerType = 0\r\n        if (this.state.isMGO) {\r\n            bunkerType = 0\r\n        } else if (this.state.isLO) {\r\n            bunkerType = 1\r\n        } else if (this.state.isFW) {\r\n            bunkerType = 2\r\n        }\r\n        var formDataTop = {\r\n            fields : [{\r\n                label : \"Vessel\",\r\n                value : this.state.vessel,\r\n                type : \"select\",\r\n                datafield : \"vessel\",\r\n                onChange : this.handleDataChange.bind(this),\r\n                options : this.state.vesselNames\r\n            },{\r\n                label : \"Chief Engineer Name\",\r\n                value : this.state.chiefEngineerName,\r\n                type : \"text\",\r\n                datafield : \"chiefEngineerName\",\r\n                onChange : this.decoratorHandleDataChange.bind(this),\r\n                onFocus : this.handleRecordFocus.bind(this),\r\n                onBlur : this.handleRecordBlur.bind(this),\r\n            },{\r\n                label : \"Report Date\",\r\n                value : this.state.reportDate,\r\n                type : \"date\",\r\n                datafield : \"reportDate\",\r\n                onChange : this.handleDataChange.bind(this),\r\n            },{\r\n                label : \"Last Bunker Date\",\r\n                value : this.state.lastBunkerDate,\r\n                type : \"date\",\r\n                datafield : \"lastBunkerDate\",\r\n                onChange : this.handleDataChange.bind(this),\r\n            },{\r\n                label : \"Last Bunker Quantity\",\r\n                value : this.state.lastBunkerQuantity,\r\n                type : \"number\",\r\n                datafield : \"lastBunkerQuantity\",\r\n                onChange : this.decoratorHandleDataChange.bind(this),\r\n                onFocus : this.handleRecordFocus.bind(this),\r\n                onBlur : this.handleRecordBlur.bind(this),\r\n            },{\r\n                label : \"Bunker ROB\",\r\n                value : this.state.bunkerROB,\r\n                type : \"text\",\r\n                datafield : \"bunkerROB\",\r\n                onChange : this.decoratorHandleDataChange.bind(this),\r\n                onFocus : this.handleRecordFocus.bind(this),\r\n                onBlur : this.handleRecordBlur.bind(this),\r\n            },{\r\n                label : \"Bunker Type\",\r\n                value : bunkerType,\r\n                type : \"select\",\r\n                datafield : \"bunkerType\",\r\n                onChange : this.handleDataChange.bind(this),\r\n                options : [{label : \"MGO\", value : 0},{label : \"Lube Oil\", value : 1},{label : \"Fresh Water\", value : 2}]\r\n            }]\r\n        }\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col style={{textAlign : 'center'}} >\r\n                    <h1 className=\"formHeader1\">Daily Bunker, Lubricants & Fresh Water Status Records</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"formContents\">\r\n                 <Col xs={12} sm={{span : 10, offset : 1}}>\r\n                    {RenderForm(formDataTop)}\r\n                 </Col>\r\n            </Row>\r\n            <Row style={{marginLeft:'-15px', marginRight : '-15px'}}>\r\n                <Col>\r\n                    <Form.Group controlId=\"formRecords\">\r\n                        <Form.Row style={{marginTop : '40px', marginBottom : '10px'}}>\r\n                            <Col style={{textAlign : 'center'}}>\r\n                                <h2>Records </h2>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row style={{textAlign : \"center\", fontSize : '.8rem', fontWeight : 600}}>\r\n                            <Col xs={5} className=\"hide-on-xs\">Date</Col>\r\n                            <Col xs={2} className=\"hide-on-xs\">Consumed</Col>\r\n                            <Col xs={4} className=\"hide-on-xs\">ROB</Col>\r\n                            <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset: 0}}> <Button variant='info' onClick={this.addRecord} style={{padding : '0 .4rem'}}>+</Button></Col>\r\n                        </Form.Row>\r\n                        {this.renderRecords()}\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                <SignatureCanvas \r\n                    canvasProps={{width: 300, height: 100, className: 'sigCanvas'}} \r\n                    ref={(ref) => { this.sigCanvas = ref }} />,\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                    <Button variant=\"secondary\" onClick={this.backToDailyBunkerDash} style={{marginRight : '10px'}}>Back</Button>\r\n                    <Button variant=\"primary\" onClick={this.addDailyBunker}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{paddingBottom : '50px'}}>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nconst options = {\r\n    autoStart: false,\r\n    continuous : false\r\n}\r\nexport default SpeechRecognition (options) (withRouter(DailyBunkerRecord));"]},"metadata":{},"sourceType":"module"}