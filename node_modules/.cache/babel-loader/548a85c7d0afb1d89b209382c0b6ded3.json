{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Helpers\\\\FormRenderer.js\";\nimport { ParseString, ParseFunction, JSDateToHTMLDateString } from \"./Helper.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap'; // optionData :\n// {\n//     value : string,\n//     label : string\n// }\n\nfunction RenderOptions(fieldOptions) {\n  var options = [];\n\n  if (fieldOptions instanceof Array) {\n    fieldOptions.forEach((optionData, i) => {\n      console.log(optionData.label);\n      options.push(React.createElement(\"option\", {\n        key: i,\n        value: optionData.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, optionData.label));\n    });\n  }\n\n  return options;\n} // fieldData : \n// {\n//     id : interfaceDeclaration,\n//     label : string,\n//     value : any,\n//     type : string,\n//     datafield : string,\n//     onChange : function,\n//     onFocus : function,\n//     onBlur : function,\n//     options : [optionData]\n// }\n\n\nfunction RenderFormFields(fieldsData) {\n  var fieldElms = [];\n\n  if (fieldsData instanceof Array) {\n    fieldsData.forEach((fieldData, i) => {\n      var id = fieldData.id;\n      var label = fieldData.label;\n      var value = fieldData.value;\n      var type = ParseString(fieldData.type);\n      var datafield = ParseString(fieldData.datafield);\n      var onChange = ParseFunction(fieldData.onChange);\n      var onFocus = ParseFunction(fieldData.onFocus);\n      var onBlur = ParseFunction(fieldData.onBlur);\n\n      switch (type) {\n        case \"select\":\n          fieldElms.push(React.createElement(Form.Group, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(Form.Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: 4,\n            md: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, label, \" : \")), React.createElement(Col, {\n            xs: 8,\n            md: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(Form.Control, {\n            as: \"select\",\n            defaultValue: value,\n            \"data-datafield\": datafield,\n            \"data-id\": id,\n            onBlur: onBlur,\n            onFocus: onFocus,\n            onChange: onChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, RenderOptions(fieldData.options))))));\n          break;\n\n        case \"date\":\n          fieldElms.push(React.createElement(Form.Group, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(Form.Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: 4,\n            md: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, label, \" : \")), React.createElement(Col, {\n            xs: 8,\n            md: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(Form.Control, {\n            type: \"date\",\n            min: \"1990\",\n            defaultValue: JSDateToHTMLDateString(value),\n            \"data-datafield\": datafield,\n            \"data-id\": id,\n            onBlur: onBlur,\n            onFocus: onFocus,\n            onChange: onChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          })))));\n          break;\n\n        default:\n          fieldElms.push(React.createElement(Form.Group, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(Form.Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: 4,\n            md: 2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(Form.Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, label, \" : \")), React.createElement(Col, {\n            xs: 8,\n            md: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(Form.Control, {\n            type: type,\n            defaultValue: value,\n            \"data-datafield\": datafield,\n            \"data-id\": id,\n            onBlur: onBlur,\n            onFocus: onFocus,\n            onChange: onChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          })))));\n          break;\n      }\n    });\n  }\n\n  return fieldElms;\n}\n\nfunction RenderForm(formData) {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, RenderFormFields(formData.fields));\n}\n\nexport { RenderForm };","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Helpers/FormRenderer.js"],"names":["ParseString","ParseFunction","JSDateToHTMLDateString","React","Container","Row","Col","Button","Form","RenderOptions","fieldOptions","options","Array","forEach","optionData","i","console","log","label","push","value","RenderFormFields","fieldsData","fieldElms","fieldData","id","type","datafield","onChange","onFocus","onBlur","RenderForm","formData","fields"],"mappings":"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","sourcesContent":["import {ParseString, ParseFunction, JSDateToHTMLDateString} from \"./Helper.js\"\r\nimport React from 'react';\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\n// optionData :\r\n// {\r\n//     value : string,\r\n//     label : string\r\n// }\r\nfunction RenderOptions(fieldOptions) {\r\n    var options = []\r\n    if (fieldOptions instanceof Array) {\r\n        fieldOptions.forEach((optionData,i) => {\r\n            console.log(optionData.label)\r\n            options.push(\r\n                <option key={i} value={optionData.value}>{optionData.label}</option>\r\n            )\r\n        })\r\n    }\r\n    return options\r\n}\r\n\r\n// fieldData : \r\n// {\r\n//     id : interfaceDeclaration,\r\n//     label : string,\r\n//     value : any,\r\n//     type : string,\r\n//     datafield : string,\r\n//     onChange : function,\r\n//     onFocus : function,\r\n//     onBlur : function,\r\n//     options : [optionData]\r\n// }\r\nfunction RenderFormFields(fieldsData) {\r\n    var fieldElms = []\r\n    if (fieldsData instanceof Array) {\r\n        fieldsData.forEach((fieldData,i) => {\r\n            var id = fieldData.id\r\n            var label = fieldData.label\r\n            var value = fieldData.value\r\n            var type = ParseString(fieldData.type)\r\n            var datafield = ParseString(fieldData.datafield)\r\n            var onChange = ParseFunction(fieldData.onChange)\r\n            var onFocus = ParseFunction(fieldData.onFocus)\r\n            var onBlur = ParseFunction(fieldData.onBlur)\r\n            switch (type) {\r\n                case \"select\":\r\n                    fieldElms.push(\r\n                        <Form.Group key={i}>\r\n                            <Form.Row>\r\n                                <Col xs={4} md={2}>\r\n                                    <Form.Label>{label} : </Form.Label>\r\n                                </Col>\r\n                                <Col xs={8} md={10}>\r\n                                    <Form.Control as=\"select\"\r\n                                    defaultValue={value}\r\n                                    data-datafield ={datafield}\r\n                                    data-id = {id}\r\n                                    onBlur={onBlur}\r\n                                    onFocus={onFocus}\r\n                                    onChange={onChange} >\r\n                                        {RenderOptions(fieldData.options)}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form.Group>)\r\n                    break;\r\n                case \"date\":\r\n                    fieldElms.push(\r\n                        <Form.Group key={i}>\r\n                            <Form.Row>\r\n                                <Col xs={4} md={2}>\r\n                                    <Form.Label>{label} : </Form.Label>\r\n                                </Col>\r\n                                <Col xs={8} md={10}>\r\n                                    <Form.Control type=\"date\" min=\"1990\"\r\n                                    defaultValue={JSDateToHTMLDateString(value)}\r\n                                    data-datafield ={datafield}\r\n                                    data-id = {id}\r\n                                    onBlur={onBlur}\r\n                                    onFocus={onFocus}\r\n                                    onChange={onChange} >\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form.Group>)\r\n                    break;\r\n                default:\r\n                    fieldElms.push(\r\n                        <Form.Group key={i}>\r\n                            <Form.Row>\r\n                                <Col xs={4} md={2}>\r\n                                    <Form.Label>{label} : </Form.Label>\r\n                                </Col>\r\n                                <Col xs={8} md={10}>\r\n                                    <Form.Control type={type}\r\n                                    defaultValue={value}\r\n                                    data-datafield ={datafield}\r\n                                    data-id = {id}\r\n                                    onBlur={onBlur}\r\n                                    onFocus={onFocus}\r\n                                    onChange={onChange} >\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Form.Row>\r\n                        </Form.Group>)\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n    return fieldElms\r\n}\r\n\r\nfunction RenderForm(formData) {\r\n    return (\r\n        <Form>\r\n            {RenderFormFields(formData.fields)}\r\n        </Form>\r\n    )\r\n}\r\nexport {RenderForm};"]},"metadata":{},"sourceType":"module"}