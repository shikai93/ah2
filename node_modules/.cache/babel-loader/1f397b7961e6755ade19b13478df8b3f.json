{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\PDFExportForm\\\\SpeechToTextRecognizer.js\";\nimport React from 'react';\nimport SpeechRecognition from \"react-speech-recognition\";\n\nclass SpeechRecognizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recordIdHandling: undefined,\n      fieldHandling: undefined,\n      val: undefined\n    }; // this.recordIdHandling = undefined\n    // this.fieldHandling = undefined\n  } // UNSAFE_componentWillReceiveProps(nextProps) {\n  //     let id = this.state.recordIdHandling;\n  //     let field = this.state.fieldHandling;\n  //     let val = nextProps.transcript;\n  //     console.log(field, val)\n  //     if (field === undefined || val === \"\" || val === this.props.transcript) {\n  //         return\n  //     }\n  //     if ( this.props.onSpeechRecognized instanceof Function) {\n  //         this.props.onSpeechRecognized(id, field, val)\n  //     }\n  // }\n\n\n  static getDerivedStateFromProps(props, state) {\n    let id = state.recordIdHandling;\n    let field = state.fieldHandling;\n    let curVal = state.val;\n    let val = props.transcript;\n    console.log(state);\n\n    if (field === undefined || val === \"\" || val === curVal) {\n      return state;\n    }\n\n    if (this.props.onSpeechRecognized instanceof Function) {\n      this.props.onSpeechRecognized(id, field, val);\n    }\n\n    state.val = val;\n    return state;\n  } // shouldComponentUpdate() {\n  //     return false\n  // }\n\n\n  handleRecordFocus(event) {\n    var newState = this.state;\n    newState.fieldHandling = this.props.field;\n    newState.recordIdHandling = this.props.id;\n    this.props.startListening();\n    this.setState(newState);\n  }\n\n  handleRecordBlur(event) {\n    var newState = this.state;\n    newState.fieldHandling = undefined;\n    this.props.stopListening();\n    this.setState(newState);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.cloneElement(this.props.children, {\n      onFocus: this.handleRecordFocus.bind(this),\n      onBlur: this.handleRecordBlur.bind(this)\n    }));\n  }\n\n}\n\nconst options = {\n  autoStart: false,\n  continuous: false\n};\nexport default SpeechRecognition(options)(SpeechRecognizer);","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/PDFExportForm/SpeechToTextRecognizer.js"],"names":["React","SpeechRecognition","SpeechRecognizer","Component","constructor","props","state","recordIdHandling","undefined","fieldHandling","val","getDerivedStateFromProps","id","field","curVal","transcript","console","log","onSpeechRecognized","Function","handleRecordFocus","event","newState","startListening","setState","handleRecordBlur","stopListening","render","cloneElement","children","onFocus","bind","onBlur","options","autoStart","continuous"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAGC,SADV;AAETC,MAAAA,aAAa,EAAGD,SAFP;AAGTE,MAAAA,GAAG,EAAGF;AAHG,KAAb,CAFe,CAOf;AACA;AACH,GAX0C,CAY3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOG,wBAAP,CAAgCN,KAAhC,EAAuCC,KAAvC,EAA8C;AAC1C,QAAIM,EAAE,GAAGN,KAAK,CAACC,gBAAf;AACA,QAAIM,KAAK,GAAGP,KAAK,CAACG,aAAlB;AACA,QAAIK,MAAM,GAAGR,KAAK,CAACI,GAAnB;AACA,QAAIA,GAAG,GAAGL,KAAK,CAACU,UAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AACA,QAAIO,KAAK,KAAKL,SAAV,IAAuBE,GAAG,KAAK,EAA/B,IAAqCA,GAAG,KAAKI,MAAjD,EAAyD;AACrD,aAAOR,KAAP;AACH;;AACD,QAAK,KAAKD,KAAL,CAAWa,kBAAX,YAAyCC,QAA9C,EAAwD;AACpD,WAAKd,KAAL,CAAWa,kBAAX,CAA8BN,EAA9B,EAAkCC,KAAlC,EAAyCH,GAAzC;AACH;;AACDJ,IAAAA,KAAK,CAACI,GAAN,GAAYA,GAAZ;AACA,WAAOJ,KAAP;AACH,GAtC0C,CAuC3C;AACA;AACA;;;AACAc,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACrB,QAAIC,QAAQ,GAAG,KAAKhB,KAApB;AACAgB,IAAAA,QAAQ,CAACb,aAAT,GAAyB,KAAKJ,KAAL,CAAWQ,KAApC;AACAS,IAAAA,QAAQ,CAACf,gBAAT,GAA4B,KAAKF,KAAL,CAAWO,EAAvC;AACA,SAAKP,KAAL,CAAWkB,cAAX;AACA,SAAKC,QAAL,CAAcF,QAAd;AACH;;AACDG,EAAAA,gBAAgB,CAACJ,KAAD,EAAQ;AACpB,QAAIC,QAAQ,GAAG,KAAKhB,KAApB;AACAgB,IAAAA,QAAQ,CAACb,aAAT,GAAyBD,SAAzB;AACA,SAAKH,KAAL,CAAWqB,aAAX;AACA,SAAKF,QAAL,CAAcF,QAAd;AACH;;AACDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC3B,KAAK,CAAC4B,YAAN,CAAmB,KAAKvB,KAAL,CAAWwB,QAA9B,EAAwC;AACrCC,MAAAA,OAAO,EAAG,KAAKV,iBAAL,CAAuBW,IAAvB,CAA4B,IAA5B,CAD2B;AAErCC,MAAAA,MAAM,EAAG,KAAKP,gBAAL,CAAsBM,IAAtB,CAA2B,IAA3B;AAF4B,KAAxC,CADD,CADJ;AAOH;;AA/D0C;;AAiE/C,MAAME,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE,KADC;AAEZC,EAAAA,UAAU,EAAG;AAFD,CAAhB;AAIA,eAAelC,iBAAiB,CAAEgC,OAAF,CAAjB,CAA6B/B,gBAA7B,CAAf","sourcesContent":["import React from 'react';\r\nimport SpeechRecognition from \"react-speech-recognition\";\r\n\r\nclass SpeechRecognizer extends React.Component { \r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordIdHandling : undefined,\r\n            fieldHandling : undefined,\r\n            val : undefined\r\n        }\r\n        // this.recordIdHandling = undefined\r\n        // this.fieldHandling = undefined\r\n    }\r\n    // UNSAFE_componentWillReceiveProps(nextProps) {\r\n    //     let id = this.state.recordIdHandling;\r\n    //     let field = this.state.fieldHandling;\r\n    //     let val = nextProps.transcript;\r\n    //     console.log(field, val)\r\n    //     if (field === undefined || val === \"\" || val === this.props.transcript) {\r\n    //         return\r\n    //     }\r\n    //     if ( this.props.onSpeechRecognized instanceof Function) {\r\n    //         this.props.onSpeechRecognized(id, field, val)\r\n    //     }\r\n    // }\r\n    static getDerivedStateFromProps(props, state) {\r\n        let id = state.recordIdHandling;\r\n        let field = state.fieldHandling;\r\n        let curVal = state.val\r\n        let val = props.transcript;\r\n        console.log(state)\r\n        if (field === undefined || val === \"\" || val === curVal) {\r\n            return state\r\n        }\r\n        if ( this.props.onSpeechRecognized instanceof Function) {\r\n            this.props.onSpeechRecognized(id, field, val)\r\n        }\r\n        state.val = val;\r\n        return state;\r\n    }\r\n    // shouldComponentUpdate() {\r\n    //     return false\r\n    // }\r\n    handleRecordFocus(event) {\r\n        var newState = this.state\r\n        newState.fieldHandling = this.props.field\r\n        newState.recordIdHandling = this.props.id\r\n        this.props.startListening()\r\n        this.setState(newState)\r\n    }\r\n    handleRecordBlur(event) {\r\n        var newState = this.state\r\n        newState.fieldHandling = undefined\r\n        this.props.stopListening()\r\n        this.setState(newState)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            {React.cloneElement(this.props.children, { \r\n                onFocus : this.handleRecordFocus.bind(this),\r\n                onBlur : this.handleRecordBlur.bind(this)})}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst options = {\r\n    autoStart: false,\r\n    continuous : false\r\n}\r\nexport default SpeechRecognition (options) (SpeechRecognizer);"]},"metadata":{},"sourceType":"module"}