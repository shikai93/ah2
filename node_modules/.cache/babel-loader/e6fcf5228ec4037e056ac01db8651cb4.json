{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\PDFExportForm\\\\MaintenanceReport\\\\MaintenanceReport.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js';\nimport { withRouter } from \"react-router-dom\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport SignatureCanvas from 'react-signature-canvas';\nimport './MaintenanceReport.css';\nimport { RenderForm } from '../../../Helpers/FormRenderer.js';\nimport { JSDateToHTMLDateString } from '../../../Helpers/Helper.js';\nimport APIService from \"../../../Helpers/APIService.js\";\n\nclass MaintenanceReport extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.exporter = new PDFExporter();\n    this.api = new APIService();\n    this.sigCanvas = undefined;\n    this.recordIdHandling = undefined;\n    this.fieldHandling = undefined;\n\n    this.addRecord = () => {\n      let oldState = this.state;\n      oldState.records.push({\n        date: new Date(),\n        description: '',\n        remarks: ''\n      });\n      this.setState(oldState);\n    };\n\n    this.removeRecord = event => {\n      let id = event.target.dataset.id;\n      let oldState = this.state;\n      oldState.records.splice(id, 1);\n      this.setState(oldState);\n    };\n\n    this.addMaintenanceReport = () => {\n      if (this.sigCanvas === undefined || this.sigCanvas.isEmpty()) {\n        alert(\"Please sign off\");\n      }\n\n      var curState = this.state;\n      curState.signature = this.sigCanvas.getTrimmedCanvas().toDataURL('image/png');\n      this.exporter.CreateMaintenanceReportPDF(curState, success => {\n        if (success) {\n          this.backToMaintenanceReportDash();\n        }\n      });\n    };\n\n    this.backToMaintenanceReportDash = () => {\n      this.props.history.push('/maintenance/report');\n    };\n\n    this.getDepartments = () => {\n      this.api.GetDepts(depts => {\n        let oldState = this.state;\n\n        if (depts instanceof Array) {\n          oldState.deptNames = [];\n          depts.forEach(elm => {\n            oldState.deptNames.push({\n              label: elm.name,\n              value: elm.name\n            });\n          });\n        }\n\n        this.setState(oldState);\n      });\n    };\n\n    this.getVessels = () => {\n      this.api.GetVessels(vessels => {\n        let oldState = this.state;\n\n        if (vessels instanceof Array) {\n          oldState.vesselNames = [];\n          vessels.value.forEach(elm => {\n            oldState.vesselNames.push({\n              label: elm.name,\n              value: elm.name\n            });\n          });\n        }\n\n        this.setState(oldState);\n      });\n    };\n\n    this.renderRecords = () => {\n      var recordElms = [];\n\n      for (var i = 0; i < this.state.records.length; i++) {\n        var record = this.state.records[i];\n        recordElms.push(React.createElement(Form.Row, {\n          key: i,\n          style: {\n            marginTop: '20px',\n            marginBottom: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Date\")), React.createElement(Col, {\n          xs: 8,\n          sm: 3,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"date\",\n          min: \"1990\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"date\",\n          onChange: this.handleRecordChange.bind(this),\n          value: JSDateToHTMLDateString(record.date),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Description\")), React.createElement(Col, {\n          xs: 8,\n          sm: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          as: \"textarea\",\n          rows: \"3\",\n          \"data-id\": i,\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          className: \"recordInput\",\n          \"data-datafield\": \"description\",\n          onChange: this.decoratorHandleDataChange.bind(this),\n          value: record.description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"Remarks\")), React.createElement(Col, {\n          xs: 8,\n          sm: 3,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"textarea\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"remarks\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.decoratorHandleDataChange.bind(this),\n          value: record.remarks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: {\n            span: 1,\n            offset: 11\n          },\n          sm: {\n            span: 1,\n            offset: 0\n          },\n          style: {\n            textAlign: 'center',\n            marginTop: 'auto',\n            marginBottom: 'auto'\n          },\n          className: \"exta-top-margin-on-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(Button, {\n          \"data-id\": i,\n          variant: \"danger\",\n          style: {\n            padding: '0 .4rem'\n          },\n          onClick: this.removeRecord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"x\"))));\n      }\n\n      return recordElms;\n    };\n\n    this.state = {\n      vessel: \"ASIAN HERCULES II\",\n      dept: \"KOMDIGI\",\n      month: \"OCTOBER\",\n      year: 2019,\n      records: [{\n        date: new Date(),\n        description: 'Completed created draft of report',\n        remarks: 'Good Job'\n      }],\n      vesselNames: [],\n      deptNames: [],\n      signature: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.getVessels();\n    this.getDepartments();\n  } // MARK : Enable Speech to Text Entry of Input\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    let id = this.recordIdHandling;\n    let field = this.fieldHandling;\n\n    if (nextProps.transcript === \"\" || nextProps.transcript === this.props.transcript) {\n      return;\n    }\n\n    if (id === undefined) {\n      this.handleDataChange(undefined, field, nextProps.transcript);\n    } else {\n      this.handleRecordChange(undefined, field, id, nextProps.transcript);\n    }\n  }\n\n  handleRecordFocus(event) {\n    this.fieldHandling = event.target.dataset.datafield;\n    this.recordIdHandling = event.target.dataset.id;\n    this.props.startListening();\n  }\n\n  handleRecordBlur(event) {\n    this.props.stopListening();\n  }\n\n  decoratorHandleDataChange(event) {\n    let field = event.target.dataset.datafield;\n    let id = event.target.dataset.id;\n    let val = event.target.value;\n\n    if (id === undefined) {\n      this.handleDataChange(undefined, field, val);\n    } else {\n      this.handleRecordChange(undefined, field, id, val);\n    }\n  }\n\n  handleDataChange(event, field = null, val = null) {\n    let oldState = this.state;\n\n    if (event !== undefined) {\n      field = event.target.dataset.datafield;\n      val = event.target.value;\n    }\n\n    switch (field) {\n      case \"vessel\":\n        oldState.vessel = val;\n        break;\n\n      case \"dept\":\n        oldState.dept = val;\n        break;\n\n      case \"month\":\n        oldState.month = val;\n        break;\n\n      case \"year\":\n        oldState.year = val;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  handleRecordChange(event, field = null, id = null, val = null) {\n    if (event !== undefined) {\n      field = event.target.dataset.datafield;\n      id = event.target.dataset.id;\n      val = event.target.value;\n    }\n\n    let oldState = this.state;\n\n    switch (field) {\n      case \"date\":\n        oldState.records[id].date = new Date(val);\n        break;\n\n      case \"description\":\n        oldState.records[id].description = val;\n        break;\n\n      case \"remarks\":\n        oldState.records[id].remarks = val;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  render() {\n    var formDataTop = {\n      fields: [{\n        label: \"Vessel\",\n        value: this.state.vessel,\n        type: \"select\",\n        datafield: \"vessel\",\n        onChange: this.handleDataChange.bind(this),\n        options: this.state.vesselNames\n      }, {\n        label: \"Dept\",\n        value: this.state.dept,\n        type: \"select\",\n        datafield: \"dept\",\n        onChange: this.handleDataChange.bind(this),\n        options: this.state.deptNames\n      }, {\n        label: \"Month\",\n        value: this.state.month,\n        type: \"select\",\n        datafield: \"month\",\n        onChange: this.handleDataChange.bind(this),\n        options: [{\n          label: \"JANUARY\",\n          value: \"JANUARY\"\n        }, {\n          label: \"FEBRUARY\",\n          value: \"FEBRUARY\"\n        }, {\n          label: \"MARCH\",\n          value: \"MARCH\"\n        }, {\n          label: \"APRIL\",\n          value: \"APRIL\"\n        }, {\n          label: \"MAY\",\n          value: \"MAY\"\n        }, {\n          label: \"JUNE\",\n          value: \"JUNE\"\n        }, {\n          label: \"JULY\",\n          value: \"JULY\"\n        }, {\n          label: \"AUGUST\",\n          value: \"AUGUST\"\n        }, {\n          label: \"SEPTEMBER\",\n          value: \"SEPTEMBER\"\n        }, {\n          label: \"OCTOBER\",\n          value: \"OCTOBER\"\n        }, {\n          label: \"NOVEMBER\",\n          value: \"NOVEMBER\"\n        }, {\n          label: \"DECEMBER\",\n          value: \"DECEMBER\"\n        }]\n      }, {\n        label: \"Year\",\n        value: this.state.year,\n        type: \"number\",\n        datafield: \"year\",\n        onChange: this.handleDataChange.bind(this)\n      }]\n    };\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"formHeader1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Machinery Maintenance Report\"))), React.createElement(Row, {\n      className: \"formContents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, RenderForm(formDataTop), React.createElement(Form.Group, {\n      controlId: \"formRecords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        marginTop: '40px',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Records \"))), React.createElement(Form.Row, {\n      style: {\n        textAlign: \"center\",\n        fontSize: '1rem',\n        fontWeight: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 3,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Col, {\n      xs: 5,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Description Of Maintenance Job Carried Out\"), React.createElement(Col, {\n      xs: 3,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Remarks \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), \"(For Official Use)\"), React.createElement(Col, {\n      xs: {\n        span: 1,\n        offset: 11\n      },\n      sm: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.addRecord,\n      style: {\n        padding: '0 .4rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"+\"))), this.renderRecords()))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(SignatureCanvas, {\n      canvasProps: {\n        width: 300,\n        height: 100,\n        className: 'sigCanvas'\n      },\n      ref: ref => {\n        this.sigCanvas = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), \",\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.backToMaintenanceReportDash,\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addMaintenanceReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      style: {\n        paddingBottom: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst options = {\n  autoStart: false,\n  continuous: false\n};\nexport default SpeechRecognition(options)(withRouter(MaintenanceReport));","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/PDFExportForm/MaintenanceReport/MaintenanceReport.js"],"names":["React","Container","Row","Col","Button","Form","PDFExporter","withRouter","SpeechRecognition","SignatureCanvas","RenderForm","JSDateToHTMLDateString","APIService","MaintenanceReport","Component","constructor","props","context","exporter","api","sigCanvas","undefined","recordIdHandling","fieldHandling","addRecord","oldState","state","records","push","date","Date","description","remarks","setState","removeRecord","event","id","target","dataset","splice","addMaintenanceReport","isEmpty","alert","curState","signature","getTrimmedCanvas","toDataURL","CreateMaintenanceReportPDF","success","backToMaintenanceReportDash","history","getDepartments","GetDepts","depts","Array","deptNames","forEach","elm","label","name","value","getVessels","GetVessels","vessels","vesselNames","renderRecords","recordElms","i","length","record","marginTop","marginBottom","handleRecordChange","bind","handleRecordBlur","handleRecordFocus","decoratorHandleDataChange","span","offset","textAlign","padding","vessel","dept","month","year","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","field","transcript","handleDataChange","datafield","startListening","stopListening","val","render","formDataTop","fields","type","onChange","options","fontSize","fontWeight","width","height","className","ref","marginRight","paddingBottom","autoStart","continuous"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SpeechRecognition from \"react-speech-recognition\";\r\nimport SignatureCanvas from 'react-signature-canvas'\r\n\r\nimport './MaintenanceReport.css'\r\nimport { RenderForm } from '../../../Helpers/FormRenderer.js';\r\nimport {JSDateToHTMLDateString} from '../../../Helpers/Helper.js'\r\nimport APIService from \"../../../Helpers/APIService.js\"\r\nclass MaintenanceReport extends React.Component { \r\n    exporter = new PDFExporter()\r\n    api = new APIService()\r\n    sigCanvas = undefined\r\n    constructor(props, context) {\r\n        super(props, context)\r\n        this.state={ \r\n            vessel : \"ASIAN HERCULES II\",\r\n            dept : \"KOMDIGI\",\r\n            month : \"OCTOBER\",\r\n            year : 2019,\r\n            records : [\r\n                {\r\n                    date : new Date(),\r\n                    description : 'Completed created draft of report',\r\n                    remarks : 'Good Job'\r\n                }\r\n            ],\r\n            vesselNames : [],\r\n            deptNames : [],\r\n            signature : undefined\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getVessels()\r\n        this.getDepartments()\r\n    }\r\n\r\n    // MARK : Enable Speech to Text Entry of Input\r\n    recordIdHandling = undefined\r\n    fieldHandling = undefined\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        let id = this.recordIdHandling;\r\n        let field = this.fieldHandling;\r\n        if (nextProps.transcript === \"\" || nextProps.transcript === this.props.transcript) {\r\n            return\r\n        }\r\n        if (id === undefined) {\r\n            this.handleDataChange(undefined, field, nextProps.transcript)\r\n        } else {\r\n            this.handleRecordChange(undefined, field, id, nextProps.transcript)\r\n        }\r\n    }\r\n    handleRecordFocus(event) {\r\n        this.fieldHandling = event.target.dataset.datafield\r\n        this.recordIdHandling = event.target.dataset.id\r\n        this.props.startListening();\r\n    }\r\n    handleRecordBlur(event) {\r\n        this.props.stopListening();\r\n    }\r\n    decoratorHandleDataChange(event){\r\n        let field = event.target.dataset.datafield\r\n        let id = event.target.dataset.id\r\n        let val = event.target.value\r\n        if (id === undefined) {\r\n            this.handleDataChange(undefined, field, val)\r\n        } else {\r\n            this.handleRecordChange(undefined, field, id, val)\r\n        }\r\n    }\r\n\r\n    addRecord = () => {\r\n        let oldState = this.state\r\n        oldState.records.push({\r\n            date : new Date(),\r\n            description : '',\r\n            remarks : ''\r\n        })\r\n        this.setState(oldState) \r\n    }\r\n    removeRecord = (event) => {\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state\r\n        oldState.records.splice(id,1)\r\n        this.setState(oldState) \r\n    }\r\n    addMaintenanceReport = () => {\r\n        if (this.sigCanvas === undefined || this.sigCanvas.isEmpty()) {\r\n            alert(\"Please sign off\")\r\n        }\r\n        var curState = this.state\r\n        curState.signature = this.sigCanvas.getTrimmedCanvas().toDataURL('image/png')\r\n        this.exporter.CreateMaintenanceReportPDF(curState, (success) => {\r\n            if (success) {\r\n                this.backToMaintenanceReportDash()\r\n            }\r\n        })\r\n    }\r\n    backToMaintenanceReportDash = () => {\r\n        this.props.history.push('/maintenance/report')\r\n    }\r\n\r\n    handleDataChange(event, field=null, val=null) {\r\n        let oldState = this.state;\r\n        if (event !== undefined) {\r\n            field = event.target.dataset.datafield\r\n            val = event.target.value\r\n        }\r\n        switch (field) {    \r\n            case \"vessel\" :\r\n                oldState.vessel = val\r\n                break\r\n            case \"dept\" :\r\n                oldState.dept = val\r\n                break\r\n            case \"month\" :\r\n                oldState.month = val\r\n                break\r\n            case \"year\" :\r\n                oldState.year = val\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    handleRecordChange(event, field=null, id=null, val=null) {\r\n        if (event !== undefined) {\r\n            field = event.target.dataset.datafield\r\n            id = event.target.dataset.id\r\n            val = event.target.value\r\n        }\r\n        let oldState = this.state\r\n        switch (field) {    \r\n            case \"date\" :\r\n                oldState.records[id].date = new Date(val)\r\n                break\r\n            case \"description\" :\r\n                oldState.records[id].description = val\r\n                break\r\n            case \"remarks\" :\r\n                    oldState.records[id].remarks = val\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    getDepartments = () => {\r\n        this.api.GetDepts((depts) => {\r\n            let oldState = this.state\r\n            if (depts instanceof Array) {\r\n                oldState.deptNames = []\r\n                depts.forEach((elm) => {\r\n                    oldState.deptNames.push({label : elm.name, value : elm.name})\r\n                });\r\n            }\r\n            this.setState(oldState) \r\n        })\r\n    }\r\n    \r\n    getVessels = () => {\r\n        this.api.GetVessels((vessels) => {\r\n            let oldState = this.state\r\n            if (vessels instanceof Array) {\r\n                oldState.vesselNames = []\r\n                vessels.value.forEach((elm) => {\r\n                    oldState.vesselNames.push({label : elm.name, value : elm.name})\r\n                });\r\n            }\r\n            this.setState(oldState) \r\n        })\r\n    } \r\n   \r\n    renderRecords = () => {\r\n        var recordElms = []\r\n        for (var i=0; i < this.state.records.length; i++) {\r\n            var record = this.state.records[i]\r\n            recordElms.push(\r\n                <Form.Row key={i} style={{marginTop : '20px', marginBottom : '20px'}}>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm\">\r\n                        <Form.Label>Date</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={3} className=\"verticalCenter\">\r\n                        <Form.Control type=\"date\" min=\"1990\"\r\n                        className=\"recordInput\"\r\n                        data-id ={i}\r\n                        data-datafield =\"date\"\r\n                        onChange={this.handleRecordChange.bind(this)} value={JSDateToHTMLDateString(record.date)}></Form.Control>\r\n                    </Col>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm\">\r\n                        <Form.Label>Description</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={5}>\r\n                        <Form.Control as=\"textarea\"\r\n                        rows=\"3\"\r\n                        data-id ={i}\r\n                        onBlur={this.handleRecordBlur.bind(this)}\r\n                        onFocus={this.handleRecordFocus.bind(this)}\r\n                        className=\"recordInput\"\r\n                        data-datafield =\"description\"\r\n                        onChange={this.decoratorHandleDataChange.bind(this)} value={record.description}></Form.Control>\r\n                    </Col>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm\">\r\n                        <Form.Label>Remarks</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={3} className=\"verticalCenter\"> \r\n                        <Form.Control type=\"textarea\"\r\n                            className=\"recordInput\"\r\n                            data-id ={i}\r\n                            data-datafield =\"remarks\"\r\n                            onBlur={this.handleRecordBlur.bind(this)}\r\n                            onFocus={this.handleRecordFocus.bind(this)}\r\n                            onChange={this.decoratorHandleDataChange.bind(this)} value={record.remarks} />\r\n                    </Col>\r\n                    <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset : 0}} \r\n                    style={{textAlign : 'center', marginTop : 'auto', marginBottom : 'auto'}}\r\n                    className=\"exta-top-margin-on-small\">\r\n                        <Button data-id ={i} variant='danger' \r\n                        style={{padding : '0 .4rem'}} \r\n                        onClick={this.removeRecord}>x</Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            )\r\n        }\r\n        return recordElms\r\n    }\r\n    render() { \r\n        var formDataTop = {\r\n            fields : [{\r\n                label : \"Vessel\",\r\n                value : this.state.vessel,\r\n                type : \"select\",\r\n                datafield : \"vessel\",\r\n                onChange : this.handleDataChange.bind(this),\r\n                options : this.state.vesselNames\r\n            },{\r\n                label : \"Dept\",\r\n                value : this.state.dept,\r\n                type : \"select\",\r\n                datafield : \"dept\",\r\n                onChange : this.handleDataChange.bind(this),\r\n                options : this.state.deptNames\r\n            },{\r\n                label : \"Month\",\r\n                value : this.state.month,\r\n                type : \"select\",\r\n                datafield : \"month\",\r\n                onChange : this.handleDataChange.bind(this),\r\n                options : [\r\n                    {label : \"JANUARY\", value : \"JANUARY\"},\r\n                    {label : \"FEBRUARY\", value : \"FEBRUARY\"},\r\n                    {label : \"MARCH\", value : \"MARCH\"},\r\n                    {label : \"APRIL\", value : \"APRIL\"},\r\n                    {label : \"MAY\", value : \"MAY\"},\r\n                    {label : \"JUNE\", value : \"JUNE\"},\r\n                    {label : \"JULY\", value : \"JULY\"},\r\n                    {label : \"AUGUST\", value : \"AUGUST\"},\r\n                    {label : \"SEPTEMBER\", value : \"SEPTEMBER\"},\r\n                    {label : \"OCTOBER\", value : \"OCTOBER\"},\r\n                    {label : \"NOVEMBER\", value : \"NOVEMBER\"},\r\n                    {label : \"DECEMBER\", value : \"DECEMBER\"},\r\n                ]\r\n            },{\r\n                label : \"Year\",\r\n                value : this.state.year,\r\n                type : \"number\",\r\n                datafield : \"year\",\r\n                onChange : this.handleDataChange.bind(this),\r\n            }]\r\n        }\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col style={{textAlign : 'center'}} >\r\n                    <h1 className=\"formHeader1\">Machinery Maintenance Report</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"formContents\">\r\n                 <Col xs={12} sm={{span : 10, offset : 1}}>\r\n                     {RenderForm(formDataTop)}\r\n                    <Form.Group controlId=\"formRecords\">\r\n                    <Form.Row style={{marginTop : '40px', marginBottom : '10px'}}>\r\n                        <Col style={{textAlign : 'center'}}>\r\n                            <h2>Records </h2>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row style={{textAlign : \"center\", fontSize : '1rem', fontWeight : 600}}>\r\n                        <Col xs={3} className=\"hide-on-xs\">Date</Col>\r\n                        <Col xs={5} className=\"hide-on-xs\">Description Of Maintenance Job Carried Out</Col>\r\n                        <Col xs={3} className=\"hide-on-xs\">Remarks <br/>(For Official Use)</Col>\r\n                        <Col xs={{span : 1, offset : 11}} sm={1}> <Button variant='info' onClick={this.addRecord} style={{padding : '0 .4rem'}}>+</Button></Col>\r\n                    </Form.Row>\r\n                    {this.renderRecords()}\r\n                    </Form.Group>\r\n                 </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                <SignatureCanvas \r\n                    canvasProps={{width: 300, height: 100, className: 'sigCanvas'}} \r\n                    ref={(ref) => { this.sigCanvas = ref }} />,\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                    <Button variant=\"secondary\" onClick={this.backToMaintenanceReportDash} style={{marginRight : '10px'}}>Back</Button>\r\n                    <Button variant=\"primary\" onClick={this.addMaintenanceReport}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{paddingBottom : '50px'}}>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nconst options = {\r\n    autoStart: false,\r\n    continuous : false\r\n}\r\nexport default SpeechRecognition(options)(withRouter(MaintenanceReport));"]},"metadata":{},"sourceType":"module"}