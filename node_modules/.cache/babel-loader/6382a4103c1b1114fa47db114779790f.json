{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Helpers\\\\messages\\\\MessageRenderer.js\";\nimport React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nclass Messages extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.renderMessages = () => {\n      if (!Array.isArray(this.props.messages)) {\n        return;\n      }\n\n      var messages = [];\n\n      if (this.show) {\n        for (var i = 0; i < this.props.messages.length; i++) {\n          var msg = this.props.messages[i];\n          messages.push(React.createElement(Alert, {\n            key: i,\n            variant: msg.type,\n            dismissible: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, msg.message));\n        }\n      }\n\n      return messages;\n    };\n\n    this.show = true;\n    this.state = {\n      messages: []\n    };\n  } // static getDerivedStateFromProps(nextProps, prevMessages) {\n  //     var prevMessages = prevState.messages\n  //     var shouldUpdate = false\n  //     for (var i=0; i < nextProps.messages.length; i++) {\n  //         var msg = nextProps.messages[i]\n  //         if (!prevMessages.includes(msg)) {\n  //             prevMessages\n  //         }\n  //     }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderMessages());\n  }\n\n}\n\nexport default Messages;","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Helpers/messages/MessageRenderer.js"],"names":["React","Alert","Messages","Component","constructor","props","context","renderMessages","Array","isArray","messages","show","i","length","msg","push","type","message","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AACA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAkB5BC,cAlB4B,GAkBX,MAAM;AACnB,UAAI,CAAEC,KAAK,CAACC,OAAN,CAAc,KAAKJ,KAAL,CAAWK,QAAzB,CAAN,EAA0C;AACtC;AACH;;AACD,UAAIA,QAAQ,GAAG,EAAf;;AACA,UAAI,KAAKC,IAAT,EAAe;AACX,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAG,KAAKP,KAAL,CAAWK,QAAX,CAAoBG,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,cAAIE,GAAG,GAAG,KAAKT,KAAL,CAAWK,QAAX,CAAoBE,CAApB,CAAV;AACAF,UAAAA,QAAQ,CAACK,IAAT,CACI,oBAAC,KAAD;AAAO,YAAA,GAAG,EAAEH,CAAZ;AAAe,YAAA,OAAO,EAAEE,GAAG,CAACE,IAA5B;AAAkC,YAAA,WAAW,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKF,GAAG,CAACG,OADT,CADJ;AAKH;AACJ;;AACD,aAAOP,QAAP;AACH,KAlC2B;;AAExB,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKO,KAAL,GAAa;AACTR,MAAAA,QAAQ,EAAG;AADF,KAAb;AAGH,GAPkC,CAQnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAkBAS,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,cAAL,EADL,CADJ;AAKH;;AA1CkC;;AA4CvC,eAAeL,QAAf","sourcesContent":["import React from 'react';\r\nimport { Alert } from 'react-bootstrap'\r\nclass Messages extends React.Component { \r\n    constructor(props, context) {\r\n        super(props, context)\r\n        this.show = true\r\n        this.state = {\r\n            messages : []\r\n        }\r\n    }\r\n    // static getDerivedStateFromProps(nextProps, prevMessages) {\r\n    //     var prevMessages = prevState.messages\r\n    //     var shouldUpdate = false\r\n    //     for (var i=0; i < nextProps.messages.length; i++) {\r\n    //         var msg = nextProps.messages[i]\r\n    //         if (!prevMessages.includes(msg)) {\r\n    //             prevMessages\r\n    //         }\r\n    //     }\r\n\r\n    // }\r\n    renderMessages = () => {\r\n        if (! Array.isArray(this.props.messages)) {\r\n            return\r\n        }\r\n        var messages = []\r\n        if (this.show) {\r\n            for (var i=0; i < this.props.messages.length; i++) {\r\n                var msg = this.props.messages[i]\r\n                messages.push(\r\n                    <Alert key={i} variant={msg.type} dismissible>\r\n                        {msg.message}\r\n                    </Alert>\r\n                )\r\n            }\r\n        }\r\n        return messages \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderMessages()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Messages"]},"metadata":{},"sourceType":"module"}