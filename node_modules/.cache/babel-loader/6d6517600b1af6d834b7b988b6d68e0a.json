{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Helpers\\\\auth\\\\auth.js\";\nimport React, { useState, useEffect } from \"react\";\nconst AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        setAuthenticated = _useState2[1];\n\n  useEffect(() => {\n    setAuthenticated(localStorage.getItem(\"isAuthenticated\") === \"true\");\n  }, [setAuthenticated, isAuthenticated]);\n  return React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      isAuthenticated,\n      setAuthenticated\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction authenticate(username, password, authManager, callback) {\n  if (username === 'test' && password === 'test') {\n    authManager.setAuthenticated(true);\n    localStorage.setItem(\"isAuthenticated\", true);\n    callback(true);\n  } else {\n    authManager.setAuthenticated(false);\n    localStorage.setItem(\"isAuthenticated\", false);\n    callback(false);\n  }\n}\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport { AuthProvider, useAuth, AuthContext, authenticate };","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Helpers/auth/auth.js"],"names":["React","useState","useEffect","AuthContext","createContext","AuthProvider","props","isAuthenticated","setAuthenticated","localStorage","getItem","children","authenticate","username","password","authManager","callback","setItem","useAuth","useContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACmBL,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QAClBM,eADkB;AAAA,QACDC,gBADC;;AAEzBN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,gBAAgB,CAACC,YAAY,CAACC,OAAb,CAAqB,iBAArB,MAA4C,MAA7C,CAAhB;AACH,GAFQ,EAEN,CAACF,gBAAD,EAAkBD,eAAlB,CAFM,CAAT;AAGA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB;AAA7B,KAAsEF,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKA,KAAK,CAACK,QADX,CADJ;AAKH;;AACD,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,WAA1C,EAAuDC,QAAvD,EAAiE;AAC7D,MAAIH,QAAQ,KAAK,MAAb,IAAuBC,QAAQ,KAAK,MAAxC,EAAgD;AAC5CC,IAAAA,WAAW,CAACP,gBAAZ,CAA6B,IAA7B;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,iBAArB,EAAuC,IAAvC;AACAD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAJD,MAIO;AACHD,IAAAA,WAAW,CAACP,gBAAZ,CAA6B,KAA7B;AACAC,IAAAA,YAAY,CAACQ,OAAb,CAAqB,iBAArB,EAAuC,KAAvC;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ;;AACD,MAAME,OAAO,GAAG,MAAMlB,KAAK,CAACmB,UAAN,CAAiBhB,WAAjB,CAAtB;;AACA,SAAQE,YAAR,EAAsBa,OAAtB,EAA+Bf,WAA/B,EAA4CS,YAA5C","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nconst AuthContext = React.createContext()\r\nfunction AuthProvider(props) {\r\n    const [isAuthenticated, setAuthenticated] = useState({});\r\n    useEffect(() => { \r\n        setAuthenticated(localStorage.getItem(\"isAuthenticated\") === \"true\")\r\n    }, [setAuthenticated,isAuthenticated])\r\n    return (\r\n        <AuthContext.Provider value={{isAuthenticated, setAuthenticated}} {...props} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\nfunction authenticate(username, password, authManager, callback) {\r\n    if (username === 'test' && password === 'test') {\r\n        authManager.setAuthenticated(true)\r\n        localStorage.setItem(\"isAuthenticated\",true)\r\n        callback(true)\r\n    } else {\r\n        authManager.setAuthenticated(false)\r\n        localStorage.setItem(\"isAuthenticated\",false)\r\n        callback(false)\r\n    }\r\n}\r\nconst useAuth = () => React.useContext(AuthContext)\r\nexport {AuthProvider, useAuth, AuthContext, authenticate}"]},"metadata":{},"sourceType":"module"}