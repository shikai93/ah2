{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\PDFExportForm\\\\DailyBunkerRecord\\\\DailyBunkerRecord.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js';\nimport { withRouter } from \"react-router-dom\";\nimport '../style.css';\n\nclass DailyBunkerRecord extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.exporter = new PDFExporter();\n\n    this.addRecord = () => {\n      let oldState = this.state;\n      var initDate = new Date();\n      oldState.records.push({\n        date: initDate,\n        consumed: 0,\n        ROB: ''\n      });\n      this.setState(oldState);\n    };\n\n    this.removeRecord = event => {\n      let id = event.target.dataset.id;\n      let oldState = this.state;\n      oldState.records.splice(id, 1);\n      this.setState(oldState);\n    };\n\n    this.JSDateToHTMLDateString = JSDate => {\n      if (JSDate === undefined || !JSDate.getFullYear) {\n        return \"\";\n      }\n\n      var datestring = JSDate.getFullYear() + '-' + (\"0\" + (JSDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + JSDate.getDate()).slice(-2);\n      return datestring;\n    };\n\n    this.addDailyBunker = () => {\n      this.exporter.CreateDailyBunkerPDF(this.state, success => {\n        if (success) {\n          this.backToDailyBunkerDash();\n        }\n      });\n    };\n\n    this.backToDailyBunkerDash = () => {\n      this.props.history.push('/dailybunker/report');\n    };\n\n    this.getVessels = () => {\n      this.exporter.get(\"/vessels\", {}, (vessels, error) => {\n        if (error == null) {\n          let oldState = this.state;\n          oldState.vesselNames = vessels.value;\n          this.setState(oldState);\n        }\n      });\n    };\n\n    this.renderVessels = () => {\n      var vesselNames = [];\n\n      for (var i = 0; i < this.state.vesselNames.length; i++) {\n        var name = this.state.vesselNames[i].name;\n        vesselNames.push(React.createElement(\"option\", {\n          key: i,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, name));\n      }\n\n      return vesselNames;\n    };\n\n    this.renderRecords = () => {\n      var recordElms = [];\n\n      for (var i = 0; i < this.state.records.length; i++) {\n        var record = this.state.records[i];\n        recordElms.push(React.createElement(Form.Row, {\n          key: i,\n          style: {\n            marginTop: '20px',\n            marginBottom: '20px',\n            fontSize: '.8rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Date\")), React.createElement(Col, {\n          xs: 8,\n          sm: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"date\",\n          min: \"1990\",\n          \"data-id\": i,\n          \"data-datafield\": \"date\",\n          className: \"recordInput\",\n          onChange: this.handleRecordChange.bind(this),\n          value: this.JSDateToHTMLDateString(record.date),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Consumed\")), React.createElement(Col, {\n          xs: 8,\n          sm: 2,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"number\",\n          min: \"1990\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"consumed\",\n          onChange: this.handleRecordChange.bind(this),\n          value: record.consumed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"ROB\")), React.createElement(Col, {\n          xs: 8,\n          sm: 4,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"ROB\",\n          onChange: this.handleRecordChange.bind(this),\n          value: record.ROB,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: {\n            span: 1,\n            offset: 11\n          },\n          sm: {\n            span: 1,\n            offset: 0\n          },\n          style: {\n            textAlign: 'center',\n            marginTop: 'auto',\n            marginBottom: 'auto'\n          },\n          className: \"exta-top-margin-on-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Button, {\n          \"data-id\": i,\n          variant: \"danger\",\n          style: {\n            padding: '0 .4rem'\n          },\n          onClick: this.removeRecord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"x\"))));\n      }\n\n      return recordElms;\n    };\n\n    var _initDate = new Date();\n\n    _initDate.setUTCHours(0, 0, 0, 0);\n\n    this.state = {\n      vessel: \"ASIAN HERCULES II\",\n      reportDate: _initDate,\n      lastBunkerDate: _initDate,\n      lastBunkerQuantity: 0,\n      chiefEngineerName: \"Ng Shi Kai\",\n      bunkerROB: \"AND1238SD1\",\n      isMGO: false,\n      isLO: false,\n      isFW: false,\n      records: [],\n      vesselNames: []\n    };\n  }\n\n  componentDidMount() {\n    this.getVessels();\n  }\n\n  handleDataChange(event) {\n    let dataFieldAffected = event.target.dataset.datafield;\n    let oldState = this.state;\n    let val = event.target.value;\n\n    switch (dataFieldAffected) {\n      case \"vessel\":\n        oldState.vessel = val;\n        break;\n\n      case \"reportDate\":\n        oldState.reportDate = val;\n        break;\n\n      case \"lastBunkerDate\":\n        oldState.lastBunkerDate = val;\n        break;\n\n      case \"lastBunkerQuantity\":\n        oldState.lastBunkerQuantity = val;\n        break;\n\n      case \"chiefEngineerName\":\n        oldState.chiefEngineerName = val;\n        break;\n\n      case \"bunkerROB\":\n        oldState.bunkerROB = val;\n        break;\n\n      case \"bunkerType\":\n        switch (val) {\n          case 0:\n            oldState.isMGO = true;\n            oldState.isLO = false;\n            oldState.isFW = false;\n            break;\n\n          case 1:\n            oldState.isMGO = false;\n            oldState.isLO = true;\n            oldState.isFW = false;\n            break;\n\n          case 2:\n            oldState.isMGO = false;\n            oldState.isLO = false;\n            oldState.isFW = true;\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  handleRecordChange(event) {\n    let dataFieldAffected = event.target.dataset.datafield;\n    let id = event.target.dataset.id;\n    let oldState = this.state;\n    let val = event.target.value;\n\n    switch (dataFieldAffected) {\n      case \"date\":\n        oldState.records[id].date = new Date(val);\n        break;\n\n      case \"consumed\":\n        oldState.records[id].consumed = val;\n        break;\n\n      case \"ROB\":\n        oldState.records[id].ROB = val;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  render() {\n    var bunkerType = 0;\n\n    if (this.state.isMGO) {\n      bunkerType = 0;\n    } else if (this.state.isLO) {\n      bunkerType = 1;\n    } else if (this.state.isFW) {\n      bunkerType = 2;\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"formHeader1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Daily Bunker, Lubricants & Fresh Water Status Records\"))), React.createElement(Row, {\n      className: \"formContents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formVessel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Vessel : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: this.state.vessel,\n      \"data-datafield\": \"vessel\",\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.renderVessels())))), React.createElement(Form.Group, {\n      controlId: \"formCEName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Chief Engineer Name : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      defaultValue: this.state.chiefEngineerName,\n      \"data-datafield\": \"chiefEngineerName\",\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formReportedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Report Date : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      min: \"1990\",\n      \"data-datafield\": \"reportDate\",\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.JSDateToHTMLDateString(this.state.reportDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formLastBunkerDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Last Bunker Date : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      min: \"1990\",\n      \"data-datafield\": \"lastBunkerDate\",\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.JSDateToHTMLDateString(this.state.lastBunkerDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formLastBunkerQty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Last Bunker Quantity : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"number\",\n      \"data-datafield\": \"lastBunkerQuantity\",\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.state.lastBunkerQuantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formBunkerRob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Bunker ROB : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      \"data-datafield\": \"bunkerROB\",\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.state.bunkerROB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formBunkerType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Bunker Type : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: bunkerType,\n      \"data-datafield\": \"bunkerType\",\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"MGO\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Lube Oil\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Fresh Water\")))))))), React.createElement(Row, {\n      style: {\n        marginLeft: '-15px',\n        marginRight: '-15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formRecords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        marginTop: '40px',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Records \"))), React.createElement(Form.Row, {\n      style: {\n        textAlign: \"center\",\n        fontSize: '.8rem',\n        fontWeight: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 5,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Col, {\n      xs: 2,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Consumed\"), React.createElement(Col, {\n      xs: 4,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"ROB\"), React.createElement(Col, {\n      xs: {\n        span: 1\n      },\n      sm: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.addRecord,\n      style: {\n        padding: '0 .4rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"+\"))), this.renderRecords()))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.backToWeeklyDefecttDash,\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addWeeklyDefect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      style: {\n        paddingBottom: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(DailyBunkerRecord);","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/PDFExportForm/DailyBunkerRecord/DailyBunkerRecord.js"],"names":["React","Container","Row","Col","Button","Form","PDFExporter","withRouter","DailyBunkerRecord","Component","constructor","props","context","exporter","addRecord","oldState","state","initDate","Date","records","push","date","consumed","ROB","setState","removeRecord","event","id","target","dataset","splice","JSDateToHTMLDateString","JSDate","undefined","getFullYear","datestring","getMonth","slice","getDate","addDailyBunker","CreateDailyBunkerPDF","success","backToDailyBunkerDash","history","getVessels","get","vessels","error","vesselNames","value","renderVessels","i","length","name","renderRecords","recordElms","record","marginTop","marginBottom","fontSize","handleRecordChange","bind","span","offset","textAlign","padding","setUTCHours","vessel","reportDate","lastBunkerDate","lastBunkerQuantity","chiefEngineerName","bunkerROB","isMGO","isLO","isFW","componentDidMount","handleDataChange","dataFieldAffected","datafield","val","render","bunkerType","marginLeft","marginRight","fontWeight","backToWeeklyDefecttDash","addWeeklyDefect","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport '../style.css'\r\nclass DailyBunkerRecord extends React.Component { \r\n    exporter = new PDFExporter()\r\n    constructor(props, context) {\r\n        super(props, context)\r\n        var initDate = new Date()\r\n        initDate.setUTCHours(0,0,0,0)\r\n        this.state={ \r\n            vessel : \"ASIAN HERCULES II\",\r\n            reportDate : initDate,\r\n            lastBunkerDate: initDate,\r\n            lastBunkerQuantity : 0,\r\n            chiefEngineerName : \"Ng Shi Kai\",\r\n            bunkerROB : \"AND1238SD1\",\r\n            isMGO : false,\r\n            isLO : false,\r\n            isFW : false,\r\n            records : [\r\n            ],\r\n            vesselNames : []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getVessels()\r\n    }\r\n    handleDataChange(event) {\r\n        let dataFieldAffected = event.target.dataset.datafield\r\n        let oldState = this.state;\r\n        let val = event.target.value;\r\n        switch (dataFieldAffected) {    \r\n            case \"vessel\" :\r\n                oldState.vessel = val\r\n                break\r\n            case \"reportDate\" :\r\n                oldState.reportDate = val\r\n                break\r\n            case \"lastBunkerDate\" :\r\n                oldState.lastBunkerDate = val\r\n                break\r\n            case \"lastBunkerQuantity\" :\r\n                oldState.lastBunkerQuantity = val\r\n                break\r\n            case \"chiefEngineerName\" :\r\n                oldState.chiefEngineerName = val\r\n                break\r\n            case \"bunkerROB\" :\r\n                oldState.bunkerROB = val\r\n                break\r\n            case \"bunkerType\" :\r\n                switch (val) {\r\n                    case 0 :\r\n                        oldState.isMGO = true\r\n                        oldState.isLO = false\r\n                        oldState.isFW = false\r\n                        break\r\n                    case 1 :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = true\r\n                        oldState.isFW = false\r\n                        break\r\n                    case 2 :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = false\r\n                        oldState.isFW = true\r\n                        break\r\n                    default :\r\n                        break\r\n                }\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    handleRecordChange(event) {\r\n        let dataFieldAffected = event.target.dataset.datafield\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state;\r\n        let val = event.target.value;\r\n        switch (dataFieldAffected) {    \r\n            case \"date\" :\r\n                oldState.records[id].date = new Date(val)\r\n                break\r\n            case \"consumed\" : \r\n                oldState.records[id].consumed = val\r\n                break\r\n            case \"ROB\" : \r\n                oldState.records[id].ROB = val\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    addRecord = () => {\r\n        let oldState = this.state\r\n        var initDate = new Date()\r\n        oldState.records.push({\r\n                date : initDate,\r\n                consumed : 0,\r\n                ROB : ''\r\n            })\r\n        this.setState(oldState) \r\n    }\r\n    removeRecord = (event) => {\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state\r\n        oldState.records.splice(id,1)\r\n        this.setState(oldState) \r\n    }\r\n\r\n    JSDateToHTMLDateString = (JSDate) => {\r\n        if (JSDate === undefined || !JSDate.getFullYear) {\r\n            return \"\"\r\n        }\r\n        var datestring = JSDate.getFullYear()+'-'+ (\"0\"+(JSDate.getMonth()+1)).slice(-2) +'-'+ (\"0\" + JSDate.getDate()).slice(-2)\r\n        return datestring\r\n    }\r\n\r\n    addDailyBunker = () => {\r\n        this.exporter.CreateDailyBunkerPDF(this.state, (success) => {\r\n            if (success) {\r\n                this.backToDailyBunkerDash()\r\n            }\r\n        })\r\n    }\r\n    backToDailyBunkerDash = () => {\r\n        this.props.history.push('/dailybunker/report')\r\n    }\r\n\r\n    getVessels = () => {\r\n        this.exporter.get(\"/vessels\", {} , (vessels, error) => {\r\n            if (error == null) {\r\n                let oldState = this.state\r\n                oldState.vesselNames = vessels.value\r\n                this.setState(oldState) \r\n            }\r\n        })\r\n    }\r\n    renderVessels = () => {\r\n        var vesselNames = []\r\n        for (var i=0; i < this.state.vesselNames.length; i++) {\r\n            var name = this.state.vesselNames[i].name\r\n            vesselNames.push(\r\n                <option key={i} value={name}>{name}</option>\r\n            )\r\n        }\r\n        return vesselNames\r\n    }\r\n\r\n    renderRecords = () => {\r\n        var recordElms = []\r\n        for (var i=0; i < this.state.records.length; i++) {\r\n            var record = this.state.records[i]\r\n            recordElms.push(\r\n                <Form.Row key={i} style={{marginTop : '20px', marginBottom : '20px', fontSize : '.8rem'}}>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Date</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={5}>\r\n                        <Form.Control type=\"date\" min=\"1990\"\r\n                        data-id ={i}\r\n                        data-datafield =\"date\"\r\n                        className=\"recordInput\"\r\n                        onChange={this.handleRecordChange.bind(this)} value={this.JSDateToHTMLDateString(record.date)}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Consumed</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={2} className=\"verticalCenter\">\r\n                        <Form.Control type=\"number\" min=\"1990\"\r\n                        className=\"recordInput\"\r\n                        data-id ={i}\r\n                        data-datafield =\"consumed\"\r\n                        onChange={this.handleRecordChange.bind(this)} value={record.consumed}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>ROB</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={4} className=\"verticalCenter\">\r\n                        <Form.Control type=\"text\"\r\n                        className=\"recordInput\"\r\n                        data-id ={i}    \r\n                        data-datafield =\"ROB\"\r\n                        onChange={this.handleRecordChange.bind(this)} value={record.ROB}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset : 0}} \r\n                    style={{textAlign : 'center', marginTop : 'auto', marginBottom : 'auto'}}\r\n                    className=\"exta-top-margin-on-small\">\r\n                        <Button data-id ={i} variant='danger' \r\n                        style={{padding : '0 .4rem'}} \r\n                        onClick={this.removeRecord}>x</Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            )\r\n        }\r\n        return recordElms\r\n    }\r\n    render() { \r\n        var bunkerType = 0\r\n        if (this.state.isMGO) {\r\n            bunkerType = 0\r\n        } else if (this.state.isLO) {\r\n            bunkerType = 1\r\n        } else if (this.state.isFW) {\r\n            bunkerType = 2\r\n        }\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col style={{textAlign : 'center'}} >\r\n                    <h1 className=\"formHeader1\">Daily Bunker, Lubricants & Fresh Water Status Records</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"formContents\">\r\n                 <Col xs={12} sm={{span : 10, offset : 1}}>\r\n                     <Form>\r\n                        <Form.Group controlId=\"formVessel\" >\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Vessel : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control as=\"select\"\r\n                                defaultValue={this.state.vessel}\r\n                                data-datafield =\"vessel\"\r\n                                onChange={this.handleDataChange.bind(this)} >\r\n                                    {this.renderVessels()}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formCEName\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Chief Engineer Name : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"text\"\r\n                                defaultValue={this.state.chiefEngineerName}\r\n                                data-datafield =\"chiefEngineerName\"\r\n                                onChange={this.handleDataChange.bind(this)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formReportedDate\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Report Date : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"date\" min=\"1990\"\r\n                                data-datafield =\"reportDate\"\r\n                                onChange={this.handleDataChange.bind(this)}  \r\n                                defaultValue={this.JSDateToHTMLDateString(this.state.reportDate)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formLastBunkerDate\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Last Bunker Date : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"date\" min=\"1990\"\r\n                                data-datafield =\"lastBunkerDate\"\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.JSDateToHTMLDateString(this.state.lastBunkerDate)}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formLastBunkerQty\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Last Bunker Quantity : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"number\"\r\n                                data-datafield =\"lastBunkerQuantity\"\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.state.lastBunkerQuantity}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBunkerRob\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Bunker ROB : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"text\"\r\n                                data-datafield =\"bunkerROB\"\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.state.bunkerROB}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBunkerType\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Bunker Type : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control as=\"select\"\r\n                                defaultValue={bunkerType}\r\n                                data-datafield =\"bunkerType\"\r\n                                onChange={this.handleDataChange.bind(this)} >\r\n                                    <option value={0}>MGO</option>\r\n                                    <option value={1}>Lube Oil</option>\r\n                                    <option value={2}>Fresh Water</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n                    </Form>\r\n                 </Col>\r\n            </Row>\r\n            <Row style={{marginLeft:'-15px', marginRight : '-15px'}}>\r\n                <Col>\r\n                    <Form.Group controlId=\"formRecords\">\r\n                        <Form.Row style={{marginTop : '40px', marginBottom : '10px'}}>\r\n                            <Col style={{textAlign : 'center'}}>\r\n                                <h2>Records </h2>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row style={{textAlign : \"center\", fontSize : '.8rem', fontWeight : 600}}>\r\n                            <Col xs={5} className=\"hide-on-xs\">Date</Col>\r\n                            <Col xs={2} className=\"hide-on-xs\">Consumed</Col>\r\n                            <Col xs={4} className=\"hide-on-xs\">ROB</Col>\r\n                            <Col xs={{span : 1}} sm={1}> <Button variant='info' onClick={this.addRecord} style={{padding : '0 .4rem'}}>+</Button></Col>\r\n                        </Form.Row>\r\n                        {this.renderRecords()}\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                    <Button variant=\"secondary\" onClick={this.backToWeeklyDefecttDash} style={{marginRight : '10px'}}>Back</Button>\r\n                    <Button variant=\"primary\" onClick={this.addWeeklyDefect}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{paddingBottom : '50px'}}>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\nexport default withRouter(DailyBunkerRecord);"]},"metadata":{},"sourceType":"module"}