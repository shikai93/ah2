{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\Auth\\\\login.js\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { AuthContext, authenticate } from '../../Helpers/auth/auth.js';\nimport MessageContext from '../../App.js';\nimport './login.css';\n\nclass LoginPage extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.login = (authManager, msgManager) => {\n      authenticate(this.username.value, this.password.value, authManager, success => {\n        if (success) {\n          var path = this.props.location.state.referrer;\n\n          if (path === undefined) {\n            this.props.history.push('/');\n          } else {\n            this.props.history.push(path);\n          }\n        } else {\n          var oldMessages = msgManager.messages;\n          oldMessages.push({\n            type: \"danger\",\n            message: \"Error : Invalid username and password\"\n          });\n          msgManager.setMessagse(oldMessages);\n        }\n      });\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n    this.state = {\n      errors: []\n    };\n  }\n\n  render() {\n    return React.createElement(AuthContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, authManager => React.createElement(MessageContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, msgManager => React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Username : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      ref: ref => {\n        this.username = ref;\n      },\n      type: \"text\",\n      placeholder: \"Username\",\n      autoComplete: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Password : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      ref: ref => {\n        this.password = ref;\n      },\n      type: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.login(authManager, msgManager),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Log In\"))))))));\n  }\n\n}\n\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/Auth/login.js"],"names":["React","withRouter","Container","Row","Col","Button","Form","AuthContext","authenticate","MessageContext","LoginPage","Component","constructor","props","context","login","authManager","msgManager","username","value","password","success","path","location","state","referrer","undefined","history","push","oldMessages","messages","type","message","setMessagse","createRef","errors","render","span","offset","ref","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\nimport {AuthContext, authenticate} from '../../Helpers/auth/auth.js'\r\nimport MessageContext from '../../App.js'\r\nimport './login.css'\r\nclass LoginPage extends React.Component { \r\n    constructor(props, context) {\r\n        super(props, context)\r\n        this.username = React.createRef(); \r\n        this.password = React.createRef(); \r\n        this.state = {\r\n            errors : []\r\n        }\r\n     }\r\n    login = (authManager,msgManager) => {\r\n        authenticate(this.username.value, this.password.value, authManager,\r\n            (success) => {\r\n                if (success) {\r\n                    var path = this.props.location.state.referrer\r\n                    if (path === undefined) {\r\n                        this.props.history.push('/')\r\n                    } else {\r\n                        this.props.history.push(path)\r\n                    }\r\n                } else {\r\n                    var oldMessages = msgManager.messages\r\n                    oldMessages.push({type : \"danger\", message : \"Error : Invalid username and password\"})\r\n                    msgManager.setMessagse(oldMessages)\r\n                }\r\n            })\r\n    }\r\n    render(){\r\n        return(\r\n        <AuthContext.Consumer>\r\n            {authManager => (\r\n                <MessageContext.Consumer>\r\n                    {msgManager => (\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={12} sm = {{span: 10, offset : 1}}>\r\n                                    <Form>\r\n                                        <Form.Group controlId=\"username\" >\r\n                                            <Form.Row>\r\n                                                <Col xs={4} md={2}>\r\n                                                    <Form.Label>Username : </Form.Label>\r\n                                                </Col>\r\n                                                <Col xs={8} md={10}>\r\n                                                    <Form.Control ref={(ref) => {this.username = ref}} type=\"text\"  placeholder=\"Username\" autoComplete=\"username\">\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId=\"password\" >\r\n                                            <Form.Row>\r\n                                                <Col xs={4} md={2}>\r\n                                                    <Form.Label>Password : </Form.Label>\r\n                                                </Col>\r\n                                                <Col xs={8} md={10}>\r\n                                                    <Form.Control ref={(ref) => {this.password = ref}} type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\">\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                    <Row>\r\n                                        <Col style={{textAlign : 'right'}}>\r\n                                            <Button variant=\"primary\" onClick={() => this.login(authManager,msgManager)} >Log In</Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </MessageContext.Consumer>\r\n            )}\r\n        </AuthContext.Consumer>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}