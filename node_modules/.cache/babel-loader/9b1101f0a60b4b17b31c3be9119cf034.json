{"ast":null,"code":"function ParseString(optionalString) {\n  if (optionalString instanceof String && optionalString !== \"\") {\n    return optionalString;\n  } else {\n    return \"not a string\";\n  }\n}\n\nfunction ParseFunction(optionalFunction) {\n  if (optionalFunction instanceof Function) {\n    return optionalFunction;\n  } else {\n    return () => {};\n  }\n}\n\nfunction JSDateToHTMLDateString(JSDate) {\n  if (JSDate === undefined || !JSDate.getFullYear) {\n    return \"\";\n  }\n\n  var datestring = JSDate.getFullYear() + '-' + (\"0\" + (JSDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + JSDate.getDate()).slice(-2);\n  return datestring;\n}\n\nexport { JSDateToHTMLDateString, ParseString, ParseFunction };","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Helpers/Helper.js"],"names":["ParseString","optionalString","String","ParseFunction","optionalFunction","Function","JSDateToHTMLDateString","JSDate","undefined","getFullYear","datestring","getMonth","slice","getDate"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,cAArB,EAAqC;AACjC,MAAIA,cAAc,YAAYC,MAA1B,IAAoCD,cAAc,KAAK,EAA3D,EAA+D;AAC3D,WAAOA,cAAP;AACH,GAFD,MAEO;AACH,WAAO,cAAP;AACH;AACJ;;AAED,SAASE,aAAT,CAAuBC,gBAAvB,EAAyC;AACrC,MAAIA,gBAAgB,YAAYC,QAAhC,EAA0C;AACtC,WAAOD,gBAAP;AACH,GAFD,MAEO;AACH,WAAO,MAAM,CAAE,CAAf;AACH;AACJ;;AAED,SAASE,sBAAT,CAAgCC,MAAhC,EAAwC;AACpC,MAAIA,MAAM,KAAKC,SAAX,IAAwB,CAACD,MAAM,CAACE,WAApC,EAAiD;AAC7C,WAAO,EAAP;AACH;;AACD,MAAIC,UAAU,GAAGH,MAAM,CAACE,WAAP,KAAqB,GAArB,GAA0B,CAAC,OAAKF,MAAM,CAACI,QAAP,KAAkB,CAAvB,CAAD,EAA4BC,KAA5B,CAAkC,CAAC,CAAnC,CAA1B,GAAiE,GAAjE,GAAsE,CAAC,MAAML,MAAM,CAACM,OAAP,EAAP,EAAyBD,KAAzB,CAA+B,CAAC,CAAhC,CAAvF;AACA,SAAOF,UAAP;AACH;;AACD,SAAQJ,sBAAR,EAAgCN,WAAhC,EAA6CG,aAA7C","sourcesContent":["function ParseString(optionalString) {\r\n    if (optionalString instanceof String && optionalString !== \"\") {\r\n        return optionalString\r\n    } else {\r\n        return \"not a string\"\r\n    }\r\n}\r\n\r\nfunction ParseFunction(optionalFunction) {\r\n    if (optionalFunction instanceof Function) {\r\n        return optionalFunction\r\n    } else {\r\n        return () => {}\r\n    }\r\n}\r\n\r\nfunction JSDateToHTMLDateString(JSDate) {\r\n    if (JSDate === undefined || !JSDate.getFullYear) {\r\n        return \"\"\r\n    }\r\n    var datestring = JSDate.getFullYear()+'-'+ (\"0\"+(JSDate.getMonth()+1)).slice(-2) +'-'+ (\"0\" + JSDate.getDate()).slice(-2)\r\n    return datestring\r\n}\r\nexport {JSDateToHTMLDateString, ParseString, ParseFunction};"]},"metadata":{},"sourceType":"module"}