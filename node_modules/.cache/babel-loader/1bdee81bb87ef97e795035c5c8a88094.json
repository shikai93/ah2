{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Components\\\\PDFExportForm\\\\DailyBunkerRecord\\\\DailyBunkerRecord.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js';\nimport { withRouter } from \"react-router-dom\";\nimport SpeechRecognition from \"react-speech-recognition\";\nimport '../style.css';\nimport { thisExpression } from '@babel/types';\n\nclass DailyBunkerRecord extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.exporter = new PDFExporter();\n    this.eventHandling = undefined;\n\n    this.addRecord = () => {\n      let oldState = this.state;\n      var initDate = new Date();\n      oldState.records.push({\n        date: initDate,\n        consumed: 0,\n        ROB: ''\n      });\n      this.setState(oldState);\n    };\n\n    this.removeRecord = event => {\n      let id = event.target.dataset.id;\n      let oldState = this.state;\n      oldState.records.splice(id, 1);\n      this.setState(oldState);\n    };\n\n    this.JSDateToHTMLDateString = JSDate => {\n      if (JSDate === undefined || !JSDate.getFullYear) {\n        return \"\";\n      }\n\n      var datestring = JSDate.getFullYear() + '-' + (\"0\" + (JSDate.getMonth() + 1)).slice(-2) + '-' + (\"0\" + JSDate.getDate()).slice(-2);\n      return datestring;\n    };\n\n    this.addDailyBunker = () => {\n      this.exporter.CreateDailyBunkerPDF(this.state, success => {\n        if (success) {\n          this.backToDailyBunkerDash();\n        }\n      });\n    };\n\n    this.backToDailyBunkerDash = () => {\n      this.props.history.push('/dailybunker/report');\n    };\n\n    this.getVessels = () => {\n      this.exporter.get(\"/vessels\", {}, (vessels, error) => {\n        if (error == null) {\n          let oldState = this.state;\n          oldState.vesselNames = vessels.value;\n          this.setState(oldState);\n        }\n      });\n    };\n\n    this.renderVessels = () => {\n      var vesselNames = [];\n\n      for (var i = 0; i < this.state.vesselNames.length; i++) {\n        var name = this.state.vesselNames[i].name;\n        vesselNames.push(React.createElement(\"option\", {\n          key: i,\n          value: name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, name));\n      }\n\n      return vesselNames;\n    };\n\n    this.renderRecords = () => {\n      var recordElms = [];\n\n      for (var i = 0; i < this.state.records.length; i++) {\n        var record = this.state.records[i];\n        recordElms.push(React.createElement(Form.Row, {\n          key: i,\n          style: {\n            marginTop: '20px',\n            marginBottom: '20px',\n            fontSize: '.8rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Date\")), React.createElement(Col, {\n          xs: 8,\n          sm: 5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"date\",\n          min: \"1990\",\n          \"data-id\": i,\n          \"data-datafield\": \"date\",\n          className: \"recordInput\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.handleRecordChange.bind(this),\n          value: this.JSDateToHTMLDateString(record.date),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Consumed\")), React.createElement(Col, {\n          xs: 8,\n          sm: 2,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"number\",\n          min: \"1990\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"consumed\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.handleRecordChange.bind(this),\n          value: record.consumed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: 4,\n          sm: 0,\n          className: \"hide-on-sm extra-pad-on-xs\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"ROB\")), React.createElement(Col, {\n          xs: 8,\n          sm: 4,\n          className: \"verticalCenter\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"text\",\n          className: \"recordInput\",\n          \"data-id\": i,\n          \"data-datafield\": \"ROB\",\n          onBlur: this.handleRecordBlur.bind(this),\n          onFocus: this.handleRecordFocus.bind(this),\n          onChange: this.handleRecordChange.bind(this),\n          vaue: record.ROB,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        })), React.createElement(Col, {\n          xs: {\n            span: 1,\n            offset: 11\n          },\n          sm: {\n            span: 1,\n            offset: 0\n          },\n          style: {\n            textAlign: 'center',\n            marginTop: 'auto',\n            marginBottom: 'auto'\n          },\n          className: \"exta-top-margin-on-small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(Button, {\n          \"data-id\": i,\n          variant: \"danger\",\n          style: {\n            padding: '0 .4rem'\n          },\n          onClick: this.removeRecord,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"x\"))));\n      }\n\n      return recordElms;\n    };\n\n    var _initDate = new Date();\n\n    this.state = {\n      vessel: \"ASIAN HERCULES II\",\n      reportDate: _initDate,\n      lastBunkerDate: _initDate,\n      lastBunkerQuantity: 0,\n      chiefEngineerName: \"Ng Shi Kai\",\n      bunkerROB: \"AND1238SD1\",\n      isMGO: true,\n      isLO: false,\n      isFW: false,\n      records: [],\n      vesselNames: []\n    };\n  }\n\n  componentDidMount() {\n    this.getVessels();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let id = this.eventHandling.target.dataset;\n    console.log(id);\n    console.log(nextProps.transcript);\n\n    if (nextProps.startTime !== this.state.startTime) {\n      this.setState({\n        startTime: nextProps.startTime\n      });\n    }\n  }\n\n  handleDataChange(event) {\n    let dataFieldAffected = event.target.dataset.datafield;\n    let oldState = this.state;\n    let val = event.target.value;\n\n    switch (dataFieldAffected) {\n      case \"vessel\":\n        oldState.vessel = val;\n        break;\n\n      case \"reportDate\":\n        oldState.reportDate = val;\n        break;\n\n      case \"lastBunkerDate\":\n        oldState.lastBunkerDate = val;\n        break;\n\n      case \"lastBunkerQuantity\":\n        oldState.lastBunkerQuantity = val;\n        break;\n\n      case \"chiefEngineerName\":\n        oldState.chiefEngineerName = val;\n        break;\n\n      case \"bunkerROB\":\n        oldState.bunkerROB = val;\n        break;\n\n      case \"bunkerType\":\n        switch (val) {\n          case \"0\":\n            oldState.isMGO = true;\n            oldState.isLO = false;\n            oldState.isFW = false;\n            break;\n\n          case \"1\":\n            oldState.isMGO = false;\n            oldState.isLO = true;\n            oldState.isFW = false;\n            break;\n\n          case \"2\":\n            oldState.isMGO = false;\n            oldState.isLO = false;\n            oldState.isFW = true;\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  handleRecordChange(event) {\n    let dataFieldAffected = event.target.dataset.datafield;\n    let id = event.target.dataset.id;\n    let oldState = this.state;\n    let val = event.target.value;\n\n    switch (dataFieldAffected) {\n      case \"date\":\n        oldState.records[id].date = new Date(val);\n        break;\n\n      case \"consumed\":\n        oldState.records[id].consumed = val;\n        break;\n\n      case \"ROB\":\n        oldState.records[id].ROB = val;\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(oldState);\n  }\n\n  handleRecordFocus(event) {\n    this.eventHandling = event;\n    this.props.startListening();\n  }\n\n  handleRecordBlur(event) {\n    console.log(this.props.transcript);\n    this.props.stopListening();\n  }\n\n  render() {\n    var bunkerType = 0;\n\n    if (this.state.isMGO) {\n      bunkerType = 0;\n    } else if (this.state.isLO) {\n      bunkerType = 1;\n    } else if (this.state.isFW) {\n      bunkerType = 2;\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"formHeader1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Daily Bunker, Lubricants & Fresh Water Status Records\"))), React.createElement(Row, {\n      className: \"formContents\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 10,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formVessel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Vessel : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: this.state.vessel,\n      \"data-datafield\": \"vessel\",\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, this.renderVessels())))), React.createElement(Form.Group, {\n      controlId: \"formCEName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Chief Engineer Name : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      defaultValue: this.state.chiefEngineerName,\n      \"data-datafield\": \"chiefEngineerName\",\n      onBlur: this.handleRecordBlur.bind(this),\n      onFocus: this.handleRecordFocus.bind(this),\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formReportedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Report Date : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      min: \"1990\",\n      \"data-datafield\": \"reportDate\",\n      onBlur: this.handleRecordBlur.bind(this),\n      onFocus: this.handleRecordFocus.bind(this),\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.JSDateToHTMLDateString(this.state.reportDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formLastBunkerDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Last Bunker Date : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"date\",\n      min: \"1990\",\n      \"data-datafield\": \"lastBunkerDate\",\n      onBlur: this.handleRecordBlur.bind(this),\n      onFocus: this.handleRecordFocus.bind(this),\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.JSDateToHTMLDateString(this.state.lastBunkerDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formLastBunkerQty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Last Bunker Quantity : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"number\",\n      \"data-datafield\": \"lastBunkerQuantity\",\n      onBlur: this.handleRecordBlur.bind(this),\n      onFocus: this.handleRecordFocus.bind(this),\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.state.lastBunkerQuantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formBunkerRob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Bunker ROB : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      \"data-datafield\": \"bunkerROB\",\n      onBlur: this.handleRecordBlur.bind(this),\n      onFocus: this.handleRecordFocus.bind(this),\n      onChange: this.handleDataChange.bind(this),\n      defaultValue: this.state.bunkerROB,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      controlId: \"formBunkerType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Bunker Type : \")), React.createElement(Col, {\n      xs: 8,\n      md: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: bunkerType,\n      \"data-datafield\": \"bunkerType\",\n      onChange: this.handleDataChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, \"MGO\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Lube Oil\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Fresh Water\")))))))), React.createElement(Row, {\n      style: {\n        marginLeft: '-15px',\n        marginRight: '-15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formRecords\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      style: {\n        marginTop: '40px',\n        marginBottom: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Col, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Records \"))), React.createElement(Form.Row, {\n      style: {\n        textAlign: \"center\",\n        fontSize: '.8rem',\n        fontWeight: 600\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 5,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Date\"), React.createElement(Col, {\n      xs: 2,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Consumed\"), React.createElement(Col, {\n      xs: 4,\n      className: \"hide-on-xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"ROB\"), React.createElement(Col, {\n      xs: {\n        span: 1,\n        offset: 11\n      },\n      sm: {\n        span: 1,\n        offset: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \" \", React.createElement(Button, {\n      variant: \"info\",\n      onClick: this.addRecord,\n      style: {\n        padding: '0 .4rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"+\"))), this.renderRecords()))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      sm: {\n        span: 11\n      },\n      style: {\n        textAlign: \"right\",\n        marginTop: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.backToDailyBunkerDash,\n      style: {\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addDailyBunker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Save\"))), React.createElement(Row, {\n      style: {\n        paddingBottom: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst options = {\n  autoStart: false,\n  continuous: false\n};\nexport default SpeechRecognition(options)(withRouter(DailyBunkerRecord));","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Components/PDFExportForm/DailyBunkerRecord/DailyBunkerRecord.js"],"names":["React","Container","Row","Col","Button","Form","PDFExporter","withRouter","SpeechRecognition","thisExpression","DailyBunkerRecord","Component","constructor","props","context","exporter","eventHandling","undefined","addRecord","oldState","state","initDate","Date","records","push","date","consumed","ROB","setState","removeRecord","event","id","target","dataset","splice","JSDateToHTMLDateString","JSDate","getFullYear","datestring","getMonth","slice","getDate","addDailyBunker","CreateDailyBunkerPDF","success","backToDailyBunkerDash","history","getVessels","get","vessels","error","vesselNames","value","renderVessels","i","length","name","renderRecords","recordElms","record","marginTop","marginBottom","fontSize","handleRecordBlur","bind","handleRecordFocus","handleRecordChange","span","offset","textAlign","padding","vessel","reportDate","lastBunkerDate","lastBunkerQuantity","chiefEngineerName","bunkerROB","isMGO","isLO","isFW","componentDidMount","componentWillReceiveProps","nextProps","console","log","transcript","startTime","handleDataChange","dataFieldAffected","datafield","val","startListening","stopListening","render","bunkerType","marginLeft","marginRight","fontWeight","paddingBottom","options","autoStart","continuous"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap'\r\nimport PDFExporter from '../../../Helpers/PDFExporter/PDFExporter.js'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SpeechRecognition from \"react-speech-recognition\";\r\n\r\nimport '../style.css'\r\nimport { thisExpression } from '@babel/types';\r\nclass DailyBunkerRecord extends React.Component { \r\n    exporter = new PDFExporter()\r\n    eventHandling = undefined\r\n    constructor(props, context) {\r\n        super(props, context)\r\n        var initDate = new Date()\r\n        this.state={ \r\n            vessel : \"ASIAN HERCULES II\",\r\n            reportDate : initDate,\r\n            lastBunkerDate: initDate,\r\n            lastBunkerQuantity : 0,\r\n            chiefEngineerName : \"Ng Shi Kai\",\r\n            bunkerROB : \"AND1238SD1\",\r\n            isMGO : true,\r\n            isLO : false,\r\n            isFW : false,\r\n            records : [\r\n            ],\r\n            vesselNames : []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.getVessels()\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let id = this.eventHandling.target.dataset;\r\n        console.log(id)\r\n        console.log(nextProps.transcript)\r\n        if (nextProps.startTime !== this.state.startTime) {\r\n          this.setState({ startTime: nextProps.startTime });\r\n        }\r\n      }\r\n    handleDataChange(event) {\r\n        let dataFieldAffected = event.target.dataset.datafield\r\n        let oldState = this.state;\r\n        let val = event.target.value;\r\n        switch (dataFieldAffected) {    \r\n            case \"vessel\" :\r\n                oldState.vessel = val\r\n                break\r\n            case \"reportDate\" :\r\n                oldState.reportDate = val\r\n                break\r\n            case \"lastBunkerDate\" :\r\n                oldState.lastBunkerDate = val\r\n                break\r\n            case \"lastBunkerQuantity\" :\r\n                oldState.lastBunkerQuantity = val\r\n                break\r\n            case \"chiefEngineerName\" :\r\n                oldState.chiefEngineerName = val\r\n                break\r\n            case \"bunkerROB\" :\r\n                oldState.bunkerROB = val\r\n                break\r\n            case \"bunkerType\" :\r\n                switch (val) {\r\n                    case \"0\" :\r\n                        oldState.isMGO = true\r\n                        oldState.isLO = false\r\n                        oldState.isFW = false\r\n                        break\r\n                    case \"1\" :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = true\r\n                        oldState.isFW = false\r\n                        break\r\n                    case \"2\" :\r\n                        oldState.isMGO = false\r\n                        oldState.isLO = false\r\n                        oldState.isFW = true\r\n                        break\r\n                    default :\r\n                        break\r\n                }\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    handleRecordChange(event) {\r\n        let dataFieldAffected = event.target.dataset.datafield\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state;\r\n        let val = event.target.value;\r\n        switch (dataFieldAffected) {    \r\n            case \"date\" :\r\n                oldState.records[id].date = new Date(val)\r\n                break\r\n            case \"consumed\" : \r\n                oldState.records[id].consumed = val\r\n                break\r\n            case \"ROB\" : \r\n                oldState.records[id].ROB = val\r\n                break\r\n            default :\r\n                break\r\n        }\r\n        this.setState(oldState)\r\n    }\r\n\r\n    addRecord = () => {\r\n        let oldState = this.state\r\n        var initDate = new Date()\r\n        oldState.records.push({\r\n                date : initDate,\r\n                consumed : 0,\r\n                ROB : ''\r\n            })\r\n        this.setState(oldState) \r\n    }\r\n    removeRecord = (event) => {\r\n        let id = event.target.dataset.id;\r\n        let oldState = this.state\r\n        oldState.records.splice(id,1)\r\n        this.setState(oldState) \r\n    }\r\n\r\n    JSDateToHTMLDateString = (JSDate) => {\r\n        if (JSDate === undefined || !JSDate.getFullYear) {\r\n            return \"\"\r\n        }\r\n        var datestring = JSDate.getFullYear()+'-'+ (\"0\"+(JSDate.getMonth()+1)).slice(-2) +'-'+ (\"0\" + JSDate.getDate()).slice(-2)\r\n        return datestring\r\n    }\r\n\r\n    handleRecordFocus(event) {\r\n        this.eventHandling = event\r\n        this.props.startListening();\r\n    }\r\n\r\n    handleRecordBlur(event) {\r\n        console.log(this.props.transcript)\r\n        this.props.stopListening();\r\n    }\r\n\r\n    addDailyBunker = () => {\r\n        this.exporter.CreateDailyBunkerPDF(this.state, (success) => {\r\n            if (success) {\r\n                this.backToDailyBunkerDash()\r\n            }\r\n        })\r\n    }\r\n    backToDailyBunkerDash = () => {\r\n        this.props.history.push('/dailybunker/report')\r\n    }\r\n\r\n    getVessels = () => {\r\n        this.exporter.get(\"/vessels\", {} , (vessels, error) => {\r\n            if (error == null) {\r\n                let oldState = this.state\r\n                oldState.vesselNames = vessels.value\r\n                this.setState(oldState) \r\n            }\r\n        })\r\n    }\r\n    renderVessels = () => {\r\n        var vesselNames = []\r\n        for (var i=0; i < this.state.vesselNames.length; i++) {\r\n            var name = this.state.vesselNames[i].name\r\n            vesselNames.push(\r\n                <option key={i} value={name}>{name}</option>\r\n            )\r\n        }\r\n        return vesselNames\r\n    }\r\n\r\n    renderRecords = () => {\r\n        var recordElms = []\r\n        for (var i=0; i < this.state.records.length; i++) {\r\n            var record = this.state.records[i]\r\n            recordElms.push(\r\n                <Form.Row key={i} style={{marginTop : '20px', marginBottom : '20px', fontSize : '.8rem'}}>\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Date</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={5}>\r\n                        <Form.Control type=\"date\" min=\"1990\"\r\n                        data-id ={i}\r\n                        data-datafield =\"date\"\r\n                        className=\"recordInput\"\r\n                        onBlur={this.handleRecordBlur.bind(this)}\r\n                        onFocus={this.handleRecordFocus.bind(this)}\r\n                        onChange={this.handleRecordChange.bind(this)} value={this.JSDateToHTMLDateString(record.date)}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>Consumed</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={2} className=\"verticalCenter\">\r\n                        <Form.Control type=\"number\" min=\"1990\"\r\n                            className=\"recordInput\"\r\n                            data-id ={i}\r\n                            data-datafield =\"consumed\"\r\n                            onBlur={this.handleRecordBlur.bind(this)}\r\n                            onFocus={this.handleRecordFocus.bind(this)}\r\n                            onChange={this.handleRecordChange.bind(this)}\r\n                            value={record.consumed}></Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={4} sm={0} className=\"hide-on-sm extra-pad-on-xs\">\r\n                        <Form.Label>ROB</Form.Label>\r\n                    </Col>\r\n                    <Col xs={8} sm={4} className=\"verticalCenter\">\r\n                        <Form.Control type=\"text\"\r\n                            className=\"recordInput\"\r\n                            data-id ={i}    \r\n                            data-datafield =\"ROB\"\r\n                            onBlur={this.handleRecordBlur.bind(this)}\r\n                            onFocus={this.handleRecordFocus.bind(this)}\r\n                            onChange={this.handleRecordChange.bind(this)}\r\n                            vaue={record.ROB}>\r\n                        </Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset : 0}} \r\n                    style={{textAlign : 'center', marginTop : 'auto', marginBottom : 'auto'}}\r\n                    className=\"exta-top-margin-on-small\">\r\n                        <Button data-id ={i} variant='danger' \r\n                        style={{padding : '0 .4rem'}} \r\n                        onClick={this.removeRecord}>x</Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            )\r\n        }\r\n        return recordElms\r\n    }\r\n    render() { \r\n        var bunkerType = 0\r\n        if (this.state.isMGO) {\r\n            bunkerType = 0\r\n        } else if (this.state.isLO) {\r\n            bunkerType = 1\r\n        } else if (this.state.isFW) {\r\n            bunkerType = 2\r\n        }\r\n        return (\r\n        <Container>\r\n            <Row>\r\n                <Col style={{textAlign : 'center'}} >\r\n                    <h1 className=\"formHeader1\">Daily Bunker, Lubricants & Fresh Water Status Records</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"formContents\">\r\n                 <Col xs={12} sm={{span : 10, offset : 1}}>\r\n                     <Form>\r\n                        <Form.Group controlId=\"formVessel\" >\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Vessel : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control as=\"select\"\r\n                                defaultValue={this.state.vessel}\r\n                                data-datafield =\"vessel\"\r\n                                onChange={this.handleDataChange.bind(this)} >\r\n                                    {this.renderVessels()}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId=\"formCEName\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Chief Engineer Name : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"text\"\r\n                                defaultValue={this.state.chiefEngineerName}\r\n                                data-datafield =\"chiefEngineerName\"\r\n                                onBlur={this.handleRecordBlur.bind(this)}\r\n                                onFocus={this.handleRecordFocus.bind(this)}\r\n                                onChange={this.handleDataChange.bind(this)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formReportedDate\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Report Date : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"date\" min=\"1990\"\r\n                                data-datafield =\"reportDate\"\r\n                                onBlur={this.handleRecordBlur.bind(this)}\r\n                                onFocus={this.handleRecordFocus.bind(this)}\r\n                                onChange={this.handleDataChange.bind(this)}  \r\n                                defaultValue={this.JSDateToHTMLDateString(this.state.reportDate)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formLastBunkerDate\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Last Bunker Date : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"date\" min=\"1990\"\r\n                                data-datafield =\"lastBunkerDate\"\r\n                                onBlur={this.handleRecordBlur.bind(this)}\r\n                                onFocus={this.handleRecordFocus.bind(this)}\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.JSDateToHTMLDateString(this.state.lastBunkerDate)}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formLastBunkerQty\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Last Bunker Quantity : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"number\"\r\n                                data-datafield =\"lastBunkerQuantity\"\r\n                                onBlur={this.handleRecordBlur.bind(this)}\r\n                                onFocus={this.handleRecordFocus.bind(this)}\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.state.lastBunkerQuantity}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBunkerRob\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Bunker ROB : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control type=\"text\"\r\n                                data-datafield =\"bunkerROB\"\r\n                                onBlur={this.handleRecordBlur.bind(this)}\r\n                                onFocus={this.handleRecordFocus.bind(this)}\r\n                                onChange={this.handleDataChange.bind(this)} \r\n                                defaultValue={this.state.bunkerROB}></Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBunkerType\">\r\n                        <Form.Row>\r\n                            <Col xs={4} md={2}>\r\n                                <Form.Label>Bunker Type : </Form.Label>\r\n                            </Col>\r\n                            <Col xs={8} md={10}>\r\n                                <Form.Control as=\"select\"\r\n                                defaultValue={bunkerType}\r\n                                data-datafield =\"bunkerType\"\r\n                                onChange={this.handleDataChange.bind(this)} >\r\n                                    <option value={0}>MGO</option>\r\n                                    <option value={1}>Lube Oil</option>\r\n                                    <option value={2}>Fresh Water</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        </Form.Group>\r\n                    </Form>\r\n                 </Col>\r\n            </Row>\r\n            <Row style={{marginLeft:'-15px', marginRight : '-15px'}}>\r\n                <Col>\r\n                    <Form.Group controlId=\"formRecords\">\r\n                        <Form.Row style={{marginTop : '40px', marginBottom : '10px'}}>\r\n                            <Col style={{textAlign : 'center'}}>\r\n                                <h2>Records </h2>\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row style={{textAlign : \"center\", fontSize : '.8rem', fontWeight : 600}}>\r\n                            <Col xs={5} className=\"hide-on-xs\">Date</Col>\r\n                            <Col xs={2} className=\"hide-on-xs\">Consumed</Col>\r\n                            <Col xs={4} className=\"hide-on-xs\">ROB</Col>\r\n                            <Col xs={{span : 1, offset : 11}} sm={{span : 1, offset: 0}}> <Button variant='info' onClick={this.addRecord} style={{padding : '0 .4rem'}}>+</Button></Col>\r\n                        </Form.Row>\r\n                        {this.renderRecords()}\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} sm={{span : 11}} style={{textAlign : \"right\", marginTop : '30px'}}>\r\n                    <Button variant=\"secondary\" onClick={this.backToDailyBunkerDash} style={{marginRight : '10px'}}>Back</Button>\r\n                    <Button variant=\"primary\" onClick={this.addDailyBunker}>Save</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{paddingBottom : '50px'}}>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )}\r\n}\r\n\r\nconst options = {\r\n    autoStart: false,\r\n    continuous : false\r\n}\r\nexport default SpeechRecognition (options) (withRouter(DailyBunkerRecord));"]},"metadata":{},"sourceType":"module"}