{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shikai.ng\\\\Desktop\\\\ah2\\\\src\\\\Helpers\\\\auth\\\\auth.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Model from \"../../Models/Models.js\";\nconst AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        setAuthenticated = _useState2[1];\n\n  useEffect(() => {\n    const api = new Model();\n    api.postReq('/token/verify', {\n      userId: localStorage.getItem(\"userId\"),\n      token: localStorage.getItem(\"authenticationToken\")\n    }, values => {\n      if (values.success) {\n        setAuthenticated(true);\n      } else {\n        setAuthenticated(false);\n      }\n    });\n  }, [setAuthenticated, isAuthenticated]);\n  return React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      isAuthenticated,\n      setAuthenticated\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), props.children);\n}\n\nfunction authenticate(username, password, authManager, callback) {\n  const api = new Model();\n  api.postReq('/login', {\n    username: username,\n    password: password\n  }, values => {\n    if (values.success) {\n      const val = values.value;\n      authManager.setAuthenticated(true);\n      localStorage.setItem(\"userId\", val.userId);\n      localStorage.setItem(\"authenticationToken\", val.token);\n    } else {\n      authManager.setAuthenticated(false);\n    }\n\n    callback(values.success);\n  });\n}\n\nconst useAuth = () => React.useContext(AuthContext);\n\nexport { AuthProvider, useAuth, AuthContext, authenticate };","map":{"version":3,"sources":["C:/Users/shikai.ng/Desktop/ah2/src/Helpers/auth/auth.js"],"names":["React","useState","useEffect","Model","AuthContext","createContext","AuthProvider","props","isAuthenticated","setAuthenticated","api","postReq","userId","localStorage","getItem","token","values","success","children","authenticate","username","password","authManager","callback","val","value","setItem","useAuth","useContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACmBN,QAAQ,CAAC,EAAD,CAD3B;AAAA;AAAA,QAClBO,eADkB;AAAA,QACDC,gBADC;;AAGzBP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,GAAG,GAAG,IAAIP,KAAJ,EAAZ;AACAO,IAAAA,GAAG,CAACC,OAAJ,CAAY,eAAZ,EAA4B;AACxBC,MAAAA,MAAM,EAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CADe;AAExBC,MAAAA,KAAK,EAAGF,YAAY,CAACC,OAAb,CAAqB,qBAArB;AAFgB,KAA5B,EAGGE,MAAD,IAAW;AACT,UAAIA,MAAM,CAACC,OAAX,EAAoB;AAChBR,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,OAFD,MAEO;AACHA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH;AACJ,KATD;AAUH,GAZQ,EAYN,CAACA,gBAAD,EAAkBD,eAAlB,CAZM,CAAT;AAaA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACA,MAAAA,eAAD;AAAkBC,MAAAA;AAAlB;AAA7B,KAAsEF,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKA,KAAK,CAACW,QADX,CADJ;AAKH;;AACD,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0CC,WAA1C,EAAuDC,QAAvD,EAAiE;AAC7D,QAAMb,GAAG,GAAG,IAAIP,KAAJ,EAAZ;AACAO,EAAAA,GAAG,CAACC,OAAJ,CAAY,QAAZ,EAAqB;AACjBS,IAAAA,QAAQ,EAAEA,QADO;AAEjBC,IAAAA,QAAQ,EAAGA;AAFM,GAArB,EAGGL,MAAD,IAAY;AACV,QAAIA,MAAM,CAACC,OAAX,EAAoB;AAChB,YAAMO,GAAG,GAAGR,MAAM,CAACS,KAAnB;AACAH,MAAAA,WAAW,CAACb,gBAAZ,CAA6B,IAA7B;AACAI,MAAAA,YAAY,CAACa,OAAb,CAAqB,QAArB,EAA8BF,GAAG,CAACZ,MAAlC;AACAC,MAAAA,YAAY,CAACa,OAAb,CAAqB,qBAArB,EAA2CF,GAAG,CAACT,KAA/C;AACH,KALD,MAKO;AACHO,MAAAA,WAAW,CAACb,gBAAZ,CAA6B,KAA7B;AACH;;AACDc,IAAAA,QAAQ,CAACP,MAAM,CAACC,OAAR,CAAR;AACH,GAbD;AAcH;;AACD,MAAMU,OAAO,GAAG,MAAM3B,KAAK,CAAC4B,UAAN,CAAiBxB,WAAjB,CAAtB;;AACA,SAAQE,YAAR,EAAsBqB,OAAtB,EAA+BvB,WAA/B,EAA4Ce,YAA5C","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport Model from \"../../Models/Models.js\"\r\nconst AuthContext = React.createContext()\r\nfunction AuthProvider(props) {\r\n    const [isAuthenticated, setAuthenticated] = useState({});\r\n\r\n    useEffect(() => { \r\n        const api = new Model();\r\n        api.postReq('/token/verify',{\r\n            userId : localStorage.getItem(\"userId\"),\r\n            token : localStorage.getItem(\"authenticationToken\")\r\n        },(values) =>{\r\n            if (values.success) {\r\n                setAuthenticated(true)\r\n            } else {\r\n                setAuthenticated(false)\r\n            }\r\n        })\r\n    }, [setAuthenticated,isAuthenticated])\r\n    return (\r\n        <AuthContext.Provider value={{isAuthenticated, setAuthenticated}} {...props} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\nfunction authenticate(username, password, authManager, callback) {\r\n    const api = new Model();\r\n    api.postReq('/login',{\r\n        username: username,\r\n        password : password\r\n    },(values) => {\r\n        if (values.success) {\r\n            const val = values.value\r\n            authManager.setAuthenticated(true)\r\n            localStorage.setItem(\"userId\",val.userId)\r\n            localStorage.setItem(\"authenticationToken\",val.token)\r\n        } else {\r\n            authManager.setAuthenticated(false)\r\n        }\r\n        callback(values.success)\r\n    })\r\n}\r\nconst useAuth = () => React.useContext(AuthContext)\r\nexport {AuthProvider, useAuth, AuthContext, authenticate}"]},"metadata":{},"sourceType":"module"}